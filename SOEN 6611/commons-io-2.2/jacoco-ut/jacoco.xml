<?xml version="1.0" encoding="iso-8859-1" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="Commons IO"><sessioninfo id="JASMINE-PC-e18310a6" start="1586160982412" dump="1586160983094"/><sessioninfo id="JASMINE-PC-509c929d" start="1586160983444" dump="1586160983915"/><sessioninfo id="JASMINE-PC-4a62b2af" start="1586160984166" dump="1586160984597"/><sessioninfo id="JASMINE-PC-4a89215" start="1586160984832" dump="1586160985254"/><sessioninfo id="JASMINE-PC-df1ed0b9" start="1586160985467" dump="1586160985851"/><sessioninfo id="JASMINE-PC-f13fc" start="1586160986102" dump="1586160990758"/><sessioninfo id="JASMINE-PC-dae710d7" start="1586160990962" dump="1586160991376"/><sessioninfo id="JASMINE-PC-237f8dcd" start="1586160991633" dump="1586160992089"/><sessioninfo id="JASMINE-PC-eeaed358" start="1586160992340" dump="1586160992804"/><sessioninfo id="JASMINE-PC-ff2775bb" start="1586160993033" dump="1586160993409"/><sessioninfo id="JASMINE-PC-91981141" start="1586160993609" dump="1586160994197"/><sessioninfo id="JASMINE-PC-f486c183" start="1586160994391" dump="1586160994879"/><sessioninfo id="JASMINE-PC-e24bd69f" start="1586160995126" dump="1586160995561"/><sessioninfo id="JASMINE-PC-8ddb1d7" start="1586160995754" dump="1586160996092"/><sessioninfo id="JASMINE-PC-501890b3" start="1586160996276" dump="1586161000786"/><sessioninfo id="JASMINE-PC-d548f4c4" start="1586161000994" dump="1586161005568"/><sessioninfo id="JASMINE-PC-dd44be70" start="1586161005795" dump="1586161006167"/><sessioninfo id="JASMINE-PC-b1ad27b3" start="1586161006422" dump="1586161006797"/><sessioninfo id="JASMINE-PC-2dae79ff" start="1586161007029" dump="1586161009780"/><sessioninfo id="JASMINE-PC-3290b7d" start="1586161009972" dump="1586161010316"/><sessioninfo id="JASMINE-PC-a24d16da" start="1586161010490" dump="1586161010896"/><sessioninfo id="JASMINE-PC-ed19ce6e" start="1586161011118" dump="1586161011765"/><sessioninfo id="JASMINE-PC-9311638" start="1586161012027" dump="1586161012405"/><sessioninfo id="JASMINE-PC-cd4d7224" start="1586161012600" dump="1586161013051"/><sessioninfo id="JASMINE-PC-42af4721" start="1586161013258" dump="1586161013752"/><sessioninfo id="JASMINE-PC-269c09e" start="1586161013959" dump="1586161014342"/><sessioninfo id="JASMINE-PC-f5da474" start="1586161014581" dump="1586161015046"/><sessioninfo id="JASMINE-PC-b81fe73a" start="1586161015300" dump="1586161015709"/><sessioninfo id="JASMINE-PC-a9ee7182" start="1586161015908" dump="1586161016386"/><sessioninfo id="JASMINE-PC-cc1effe2" start="1586161016576" dump="1586161020455"/><sessioninfo id="JASMINE-PC-eb22cf33" start="1586161020642" dump="1586161026459"/><sessioninfo id="JASMINE-PC-2a6a845c" start="1586161026658" dump="1586161026992"/><sessioninfo id="JASMINE-PC-fbfe0621" start="1586161027194" dump="1586161027572"/><sessioninfo id="JASMINE-PC-728fc16" start="1586161027817" dump="1586161028243"/><sessioninfo id="JASMINE-PC-b8508b1f" start="1586161028456" dump="1586161028800"/><sessioninfo id="JASMINE-PC-57553a7e" start="1586161028989" dump="1586161029314"/><sessioninfo id="JASMINE-PC-9f4623bb" start="1586161029494" dump="1586161029982"/><sessioninfo id="JASMINE-PC-2390a97e" start="1586161030205" dump="1586161030687"/><sessioninfo id="JASMINE-PC-9b57ef6b" start="1586161030898" dump="1586161031296"/><sessioninfo id="JASMINE-PC-d94e8a23" start="1586161031516" dump="1586161031860"/><sessioninfo id="JASMINE-PC-c1c3895d" start="1586161032060" dump="1586161032387"/><sessioninfo id="JASMINE-PC-674534fe" start="1586161032597" dump="1586161033036"/><sessioninfo id="JASMINE-PC-49c99b03" start="1586161033238" dump="1586161033672"/><sessioninfo id="JASMINE-PC-70def7d7" start="1586161033951" dump="1586161034265"/><sessioninfo id="JASMINE-PC-13c94643" start="1586161034460" dump="1586161034793"/><sessioninfo id="JASMINE-PC-b7a42709" start="1586161035012" dump="1586161035319"/><sessioninfo id="JASMINE-PC-7ed3c6b" start="1586161035548" dump="1586161035929"/><sessioninfo id="JASMINE-PC-2dae30c2" start="1586161036138" dump="1586161036884"/><sessioninfo id="JASMINE-PC-7b5165e1" start="1586161037075" dump="1586161037541"/><sessioninfo id="JASMINE-PC-ba1c393e" start="1586161037744" dump="1586161038144"/><sessioninfo id="JASMINE-PC-d4240929" start="1586161038341" dump="1586161038666"/><sessioninfo id="JASMINE-PC-18d4cc6d" start="1586161038880" dump="1586161039400"/><sessioninfo id="JASMINE-PC-c3299001" start="1586161039599" dump="1586161043824"/><sessioninfo id="JASMINE-PC-fb3b4cb6" start="1586161044214" dump="1586161044863"/><sessioninfo id="JASMINE-PC-1734cab0" start="1586161045043" dump="1586161045726"/><sessioninfo id="JASMINE-PC-a102dc70" start="1586161046279" dump="1586161046857"/><sessioninfo id="JASMINE-PC-4ec6b7a3" start="1586161047096" dump="1586161047625"/><sessioninfo id="JASMINE-PC-c6c6b2ab" start="1586161047825" dump="1586161048216"/><sessioninfo id="JASMINE-PC-9ae0f246" start="1586161048438" dump="1586161050205"/><sessioninfo id="JASMINE-PC-c830dbfc" start="1586161050583" dump="1586161052012"/><sessioninfo id="JASMINE-PC-e1fe0b67" start="1586161052252" dump="1586161052725"/><sessioninfo id="JASMINE-PC-89040245" start="1586161052910" dump="1586161053547"/><sessioninfo id="JASMINE-PC-f7aae63b" start="1586161054006" dump="1586161055027"/><sessioninfo id="JASMINE-PC-40141966" start="1586161055255" dump="1586161060960"/><sessioninfo id="JASMINE-PC-a70af63c" start="1586161061176" dump="1586161061507"/><sessioninfo id="JASMINE-PC-dbdf8988" start="1586161061696" dump="1586161062084"/><sessioninfo id="JASMINE-PC-e1556d93" start="1586161062306" dump="1586161062662"/><sessioninfo id="JASMINE-PC-d76f3fb8" start="1586161062881" dump="1586161063228"/><sessioninfo id="JASMINE-PC-dcc8ef7a" start="1586161063453" dump="1586161063879"/><sessioninfo id="JASMINE-PC-6978a108" start="1586161064121" dump="1586161064685"/><sessioninfo id="JASMINE-PC-31793307" start="1586161064864" dump="1586161065321"/><sessioninfo id="JASMINE-PC-f4837d16" start="1586161065596" dump="1586161066016"/><sessioninfo id="JASMINE-PC-f571f6b7" start="1586161066251" dump="1586161066648"/><sessioninfo id="JASMINE-PC-afeafbc0" start="1586161066851" dump="1586161067202"/><sessioninfo id="JASMINE-PC-5773ed2" start="1586161067406" dump="1586161067822"/><sessioninfo id="JASMINE-PC-890cd015" start="1586161068022" dump="1586161068437"/><sessioninfo id="JASMINE-PC-4a693efc" start="1586161068626" dump="1586161068953"/><sessioninfo id="JASMINE-PC-4a794ef5" start="1586161069121" dump="1586161069668"/><sessioninfo id="JASMINE-PC-cd82b232" start="1586161069869" dump="1586161070189"/><sessioninfo id="JASMINE-PC-193e8384" start="1586161070404" dump="1586161070734"/><sessioninfo id="JASMINE-PC-5cb046a" start="1586161070952" dump="1586161071298"/><sessioninfo id="JASMINE-PC-8e5b5724" start="1586161071512" dump="1586161072029"/><sessioninfo id="JASMINE-PC-4bd021d3" start="1586161072209" dump="1586161072959"/><package name="org/apache/commons/io/monitor"><class name="org/apache/commons/io/monitor/FileEntry" sourcefilename="FileEntry.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V" line="70"><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="refresh" desc="(Ljava/io/File;)Z" line="96"><counter type="INSTRUCTION" missed="2" covered="70"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newChildInstance" desc="(Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;" line="125"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lorg/apache/commons/io/monitor/FileEntry;" line="134"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLevel" desc="()I" line="143"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()[Lorg/apache/commons/io/monitor/FileEntry;" line="154"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setChildren" desc="([Lorg/apache/commons/io/monitor/FileEntry;)V" line="163"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFile" desc="()Ljava/io/File;" line="172"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="181"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setName" desc="(Ljava/lang/String;)V" line="190"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastModified" desc="()J" line="200"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLastModified" desc="(J)V" line="210"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLength" desc="()J" line="219"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLength" desc="(J)V" line="228"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExists" desc="()Z" line="238"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExists" desc="(Z)V" line="248"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDirectory" desc="()Z" line="257"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDirectory" desc="(Z)V" line="266"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="121"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="16" covered="26"/><counter type="COMPLEXITY" missed="18" covered="13"/><counter type="METHOD" missed="10" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/monitor/FileAlterationListener" sourcefilename="FileAlterationListener.java"/><class name="org/apache/commons/io/monitor/FileAlterationListenerAdaptor" sourcefilename="FileAlterationListenerAdaptor.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStart" desc="(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onDirectoryCreate" desc="(Ljava/io/File;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onDirectoryChange" desc="(Ljava/io/File;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onDirectoryDelete" desc="(Ljava/io/File;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onFileCreate" desc="(Ljava/io/File;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onFileChange" desc="(Ljava/io/File;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onFileDelete" desc="(Ljava/io/File;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStop" desc="(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/monitor/FileAlterationMonitor" sourcefilename="FileAlterationMonitor.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="34"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInterval" desc="()J" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setThreadFactory" desc="(Ljava/util/concurrent/ThreadFactory;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addObserver" desc="(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeObserver" desc="(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getObservers" desc="()Ljava/lang/Iterable;" line="120"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="()V" line="129"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stop" desc="()V" line="150"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stop" desc="(J)V" line="162"><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="180"><counter type="INSTRUCTION" missed="3" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="179"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="4" covered="53"/><counter type="COMPLEXITY" missed="1" covered="24"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/monitor/FileAlterationObserver" sourcefilename="FileAlterationObserver.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/io/FileFilter;)V" line="145"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V" line="157"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="166"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/io/FileFilter;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V" line="188"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/FileFilter;Lorg/apache/commons/io/IOCase;)V" line="124"><counter type="INSTRUCTION" missed="25" covered="25"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDirectory" desc="()Ljava/io/File;" line="223"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFileFilter" desc="()Ljava/io/FileFilter;" line="233"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addListener" desc="(Lorg/apache/commons/io/monitor/FileAlterationListener;)V" line="242"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeListener" desc="(Lorg/apache/commons/io/monitor/FileAlterationListener;)V" line="253"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getListeners" desc="()Ljava/lang/Iterable;" line="265"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialize" desc="()V" line="274"><counter type="INSTRUCTION" missed="16" covered="29"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="destroy" desc="()V" line="289"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkAndNotify" desc="()V" line="297"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkAndNotify" desc="(Lorg/apache/commons/io/monitor/FileEntry;[Lorg/apache/commons/io/monitor/FileEntry;[Ljava/io/File;)V" line="325"><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFileEntry" desc="(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;" line="358"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCreate" desc="(Lorg/apache/commons/io/monitor/FileEntry;)V" line="375"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doMatch" desc="(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V" line="395"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doDelete" desc="(Lorg/apache/commons/io/monitor/FileEntry;)V" line="412"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listFiles" desc="(Ljava/io/File;)[Ljava/io/File;" line="429"><counter type="INSTRUCTION" missed="3" covered="30"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="449"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="519"/><counter type="BRANCH" missed="12" covered="62"/><counter type="LINE" missed="11" covered="113"/><counter type="COMPLEXITY" missed="13" covered="46"/><counter type="METHOD" missed="3" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileEntry.java"><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="1" cb="1"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="1" ci="8" mb="1" cb="1"/><line nr="105" mi="1" ci="8" mb="1" cb="1"/><line nr="106" mi="0" ci="12" mb="1" cb="3"/><line nr="109" mi="0" ci="22" mb="2" cb="6"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="11" ci="0" mb="2" cb="0"/><line nr="154" mi="1" ci="7" mb="1" cb="1"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="0" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="121"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="16" covered="26"/><counter type="COMPLEXITY" missed="18" covered="13"/><counter type="METHOD" missed="10" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileAlterationListenerAdaptor.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileAlterationMonitor.java"><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="2"/><line nr="66" mi="0" ci="16" mb="0" cb="2"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="2"/><line nr="108" mi="0" ci="6" mb="0" cb="2"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="11" mb="0" cb="2"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="2"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="11" mb="0" cb="2"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="11" mb="0" cb="2"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="1" cb="1"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="1" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="179"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="4" covered="53"/><counter type="COMPLEXITY" missed="1" covered="24"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileAlterationListener.java"/><sourcefile name="FileAlterationObserver.java"><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="7" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="8" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="1" cb="1"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="1" cb="1"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="4" ci="2" mb="3" cb="1"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="2" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="2"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="2"/><line nr="254" mi="0" ci="6" mb="0" cb="2"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="7" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="276" mi="4" ci="5" mb="1" cb="1"/><line nr="277" mi="2" ci="6" mb="1" cb="1"/><line nr="278" mi="10" ci="0" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="11" mb="0" cb="2"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="2"/><line nr="304" mi="0" ci="11" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="1" cb="1"/><line nr="306" mi="0" ci="8" mb="0" cb="0"/><line nr="312" mi="0" ci="11" mb="0" cb="2"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="326" mi="0" ci="9" mb="0" cb="2"/><line nr="327" mi="0" ci="16" mb="0" cb="2"/><line nr="328" mi="0" ci="13" mb="0" cb="4"/><line nr="329" mi="0" ci="9" mb="0" cb="0"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="13" mb="0" cb="4"/><line nr="334" mi="0" ci="6" mb="0" cb="0"/><line nr="335" mi="0" ci="10" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="6" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="6" mb="0" cb="2"/><line nr="344" mi="0" ci="9" mb="0" cb="0"/><line nr="345" mi="0" ci="5" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="1" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="4" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="9" mb="0" cb="2"/><line nr="362" mi="0" ci="8" mb="0" cb="2"/><line nr="363" mi="0" ci="9" mb="0" cb="0"/><line nr="365" mi="0" ci="3" mb="0" cb="0"/><line nr="366" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="11" mb="0" cb="2"/><line nr="376" mi="0" ci="3" mb="0" cb="2"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="16" mb="0" cb="2"/><line nr="384" mi="0" ci="3" mb="0" cb="0"/><line nr="386" mi="0" ci="1" mb="0" cb="0"/><line nr="395" mi="0" ci="4" mb="0" cb="2"/><line nr="396" mi="0" ci="11" mb="0" cb="2"/><line nr="397" mi="0" ci="3" mb="0" cb="2"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="412" mi="0" ci="11" mb="0" cb="2"/><line nr="413" mi="0" ci="3" mb="0" cb="2"/><line nr="414" mi="0" ci="5" mb="0" cb="0"/><line nr="416" mi="0" ci="4" mb="0" cb="0"/><line nr="418" mi="0" ci="1" mb="0" cb="0"/><line nr="419" mi="0" ci="1" mb="0" cb="0"/><line nr="429" mi="0" ci="2" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="0" cb="2"/><line nr="431" mi="3" ci="8" mb="1" cb="1"/><line nr="433" mi="0" ci="2" mb="0" cb="2"/><line nr="434" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="7" mb="1" cb="3"/><line nr="437" mi="0" ci="4" mb="0" cb="0"/><line nr="439" mi="0" ci="2" mb="0" cb="0"/><line nr="449" mi="0" ci="4" mb="0" cb="0"/><line nr="450" mi="0" ci="6" mb="0" cb="0"/><line nr="451" mi="0" ci="4" mb="0" cb="0"/><line nr="452" mi="0" ci="6" mb="0" cb="0"/><line nr="453" mi="0" ci="4" mb="0" cb="0"/><line nr="454" mi="0" ci="3" mb="0" cb="2"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="6" mb="0" cb="0"/><line nr="458" mi="0" ci="4" mb="0" cb="0"/><line nr="459" mi="0" ci="6" mb="0" cb="0"/><line nr="460" mi="0" ci="4" mb="0" cb="0"/><line nr="461" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="519"/><counter type="BRANCH" missed="12" covered="62"/><counter type="LINE" missed="11" covered="113"/><counter type="COMPLEXITY" missed="13" covered="46"/><counter type="METHOD" missed="3" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="121" covered="830"/><counter type="BRANCH" missed="22" covered="100"/><counter type="LINE" missed="31" covered="201"/><counter type="COMPLEXITY" missed="32" covered="92"/><counter type="METHOD" missed="13" covered="50"/><counter type="CLASS" missed="0" covered="4"/></package><package name="org/apache/commons/io/input"><class name="org/apache/commons/io/input/ReversedLinesFileReader$FilePart" sourcefilename="ReversedLinesFileReader.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[B)V" line="178"><counter type="INSTRUCTION" missed="5" covered="69"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rollOver" desc="()Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;" line="208"><counter type="INSTRUCTION" missed="32" covered="29"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLine" desc="()Ljava/lang/String;" line="233"><counter type="INSTRUCTION" missed="12" covered="102"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createLeftOver" desc="()V" line="289"><counter type="INSTRUCTION" missed="3" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNewLineMatchByteCount" desc="([BI)I" line="308"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="284"/><counter type="BRANCH" missed="5" covered="39"/><counter type="LINE" missed="6" covered="57"/><counter type="COMPLEXITY" missed="5" covered="22"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/ClosedInputStream" sourcefilename="ClosedInputStream.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="46"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/CountingInputStream" sourcefilename="CountingInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="58"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterRead" desc="(I)V" line="71"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCount" desc="()I" line="88"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetCount" desc="()I" line="106"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByteCount" desc="()J" line="124"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetByteCount" desc="()J" line="138"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/CharSequenceReader" sourcefilename="CharSequenceReader.java"><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;)V" line="42"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(I)V" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markSupported" desc="()Z" line="72"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="83"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="101"><counter type="INSTRUCTION" missed="26" covered="47"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="129"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="140"><counter type="INSTRUCTION" missed="12" covered="35"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="161"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="129"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="4" covered="33"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/ReversedLinesFileReader" sourcefilename="ReversedLinesFileReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;ILjava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="165"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLine" desc="()Ljava/lang/String;" line="133"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="159"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="203"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="2" covered="41"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/AutoCloseInputStream" sourcefilename="AutoCloseInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterRead" desc="(I)V" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finalize" desc="()V" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/SwappedDataInputStream" sourcefilename="SwappedDataInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readBoolean" desc="()Z" line="58"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readByte" desc="()B" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readChar" desc="()C" line="82"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readDouble" desc="()D" line="94"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFloat" desc="()F" line="106"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFully" desc="([B)V" line="119"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFully" desc="([BII)V" line="135"><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readInt" desc="()I" line="160"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLine" desc="()Ljava/lang/String;" line="172"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLong" desc="()J" line="185"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readShort" desc="()S" line="197"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readUnsignedByte" desc="()I" line="209"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readUnsignedShort" desc="()I" line="221"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readUTF" desc="()Ljava/lang/String;" line="233"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipBytes" desc="(I)I" line="247"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="98"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="1" covered="18"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/XmlStreamReader" sourcefilename="XmlStreamReader.java"><method name="getDefaultEncoding" desc="()Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="125"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="140"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Z)V" line="171"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;ZLjava/lang/String;)V" line="202"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URL;)V" line="228"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/net/URLConnection;Ljava/lang/String;)V" line="250"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;)V" line="284"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V" line="322"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/lang/String;Z)V" line="365"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEncoding" desc="()Ljava/lang/String;" line="374"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="387"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="397"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doRawStream" desc="(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;" line="412"><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doHttpStream" desc="(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;" line="439"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doLenientDetection" desc="(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;" line="465"><counter type="INSTRUCTION" missed="3" covered="51"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateRawEncoding" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="498"><counter type="INSTRUCTION" missed="0" covered="199"/><counter type="BRANCH" missed="1" covered="37"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateHttpEncoding" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;" line="558"><counter type="INSTRUCTION" missed="0" covered="171"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContentTypeMime" desc="(Ljava/lang/String;)Ljava/lang/String;" line="611"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContentTypeEncoding" desc="(Ljava/lang/String;)Ljava/lang/String;" line="635"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXmlProlog" desc="(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;" line="662"><counter type="INSTRUCTION" missed="22" covered="121"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="3" covered="31"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAppXml" desc="(Ljava/lang/String;)Z" line="716"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTextXml" desc="(Ljava/lang/String;)Z" line="731"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="0" covered="126"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="111" covered="941"/><counter type="BRANCH" missed="12" covered="122"/><counter type="LINE" missed="25" covered="161"/><counter type="COMPLEXITY" missed="14" covered="77"/><counter type="METHOD" missed="5" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/ProxyReader" sourcefilename="ProxyReader.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="55"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="([C)I" line="74"><counter type="INSTRUCTION" missed="9" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="95"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/nio/CharBuffer;)I" line="115"><counter type="INSTRUCTION" missed="9" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="134"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ready" desc="()Z" line="149"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="163"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="177"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="190"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="202"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeRead" desc="(I)V" line="224"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterRead" desc="(I)V" line="244"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleIOException" desc="(Ljava/io/IOException;)V" line="256"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="51"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="41" covered="16"/><counter type="COMPLEXITY" missed="11" covered="6"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/BrokenInputStream" sourcefilename="BrokenInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/IOException;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="available" desc="()I" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/TaggedInputStream" sourcefilename="TaggedInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCauseOf" desc="(Ljava/lang/Throwable;)Z" line="88"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwIfCauseOf" desc="(Ljava/lang/Throwable;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleIOException" desc="(Ljava/io/IOException;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/ReaderInputStream" sourcefilename="ReaderInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V" line="107"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V" line="118"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V" line="135"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/nio/charset/Charset;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/lang/String;I)V" line="161"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Ljava/lang/String;)V" line="172"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="182"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillBuffer" desc="()V" line="192"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="223"><counter type="INSTRUCTION" missed="26" covered="69"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([B)I" line="261"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="274"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="292"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="221"/><counter type="BRANCH" missed="7" covered="29"/><counter type="LINE" missed="5" covered="57"/><counter type="COMPLEXITY" missed="9" covered="21"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/CloseShieldInputStream" sourcefilename="CloseShieldInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/BoundedInputStream" sourcefilename="BoundedInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;J)V" line="45"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="86"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([B)I" line="103"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="117"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="139"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="available" desc="()I" line="150"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="172"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reset" desc="()V" line="183"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mark" desc="(I)V" line="193"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markSupported" desc="()Z" line="203"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPropagateClose" desc="()Z" line="215"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPropagateClose" desc="(Z)V" line="228"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="84" covered="107"/><counter type="BRANCH" missed="9" covered="11"/><counter type="LINE" missed="21" covered="23"/><counter type="COMPLEXITY" missed="14" covered="10"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/NullReader" sourcefilename="NullReader.java"><method name="&lt;init&gt;" desc="(J)V" line="80"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JZZ)V" line="67"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="()J" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()J" line="115"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="126"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(I)V" line="140"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markSupported" desc="()Z" line="154"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="169"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([C)I" line="192"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="210"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="236"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="264"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processChar" desc="()I" line="288"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processChars" desc="([CII)V" line="303"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doEndOfFile" desc="()I" line="314"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="253"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="2" covered="61"/><counter type="COMPLEXITY" missed="2" covered="26"/><counter type="METHOD" missed="2" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/TailerListener" sourcefilename="TailerListener.java"/><class name="org/apache/commons/io/input/TailerListenerAdapter" sourcefilename="TailerListenerAdapter.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(Lorg/apache/commons/io/input/Tailer;)V" line="33"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileNotFound" desc="()V" line="39"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileRotated" desc="()V" line="48"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handle" desc="(Ljava/lang/String;)V" line="55"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handle" desc="(Ljava/lang/Exception;)V" line="62"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/apache/commons/io/input/BOMInputStream" sourcefilename="BOMInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Z)V" line="102"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;[Lorg/apache/commons/io/ByteOrderMark;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V" line="124"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasBOM" desc="()Z" line="140"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasBOM" desc="(Lorg/apache/commons/io/ByteOrderMark;)Z" line="154"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBOM" desc="()Lorg/apache/commons/io/ByteOrderMark;" line="167"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBOMCharsetName" desc="()Ljava/lang/String;" line="201"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFirstBytes" desc="()I" line="214"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="()Lorg/apache/commons/io/ByteOrderMark;" line="224"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(Lorg/apache/commons/io/ByteOrderMark;)Z" line="239"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="262"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="277"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([B)I" line="301"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(I)V" line="310"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="321"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="338"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="348"/><counter type="BRANCH" missed="0" covered="58"/><counter type="LINE" missed="0" covered="73"/><counter type="COMPLEXITY" missed="0" covered="46"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/XmlStreamReaderException" sourcefilename="XmlStreamReaderException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBomEncoding" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXmlGuessEncoding" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXmlEncoding" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContentTypeMime" desc="()Ljava/lang/String;" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContentTypeEncoding" desc="()Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/Tailer" sourcefilename="Tailer.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;)V" line="140"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;J)V" line="150"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZ)V" line="132"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;JZ)Lorg/apache/commons/io/input/Tailer;" line="181"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;J)Lorg/apache/commons/io/input/Tailer;" line="197"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/io/File;Lorg/apache/commons/io/input/TailerListener;)Lorg/apache/commons/io/input/Tailer;" line="209"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="()Ljava/io/File;" line="218"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDelay" desc="()J" line="227"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()V" line="234"><counter type="INSTRUCTION" missed="16" covered="104"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="6" covered="37"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stop" desc="()V" line="327"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLines" desc="(Ljava/io/RandomAccessFile;)J" line="338"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLine" desc="(Ljava/io/RandomAccessFile;)Ljava/lang/String;" line="356"><counter type="INSTRUCTION" missed="9" covered="27"/><counter type="BRANCH" missed="2" covered="5"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="56" covered="202"/><counter type="BRANCH" missed="3" covered="22"/><counter type="LINE" missed="18" covered="68"/><counter type="COMPLEXITY" missed="9" covered="16"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/CharSequenceInputStream" sourcefilename="CharSequenceInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V" line="54"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;Ljava/lang/String;I)V" line="72"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)V" line="83"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;Ljava/lang/String;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fillBuffer" desc="()V" line="104"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="114"><counter type="INSTRUCTION" missed="32" covered="73"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="148"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([B)I" line="161"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="skip" desc="(J)J" line="166"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="available" desc="()I" line="177"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="182"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(I)V" line="190"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="195"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markSupported" desc="()Z" line="203"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="201"/><counter type="BRANCH" missed="9" covered="29"/><counter type="LINE" missed="7" covered="56"/><counter type="COMPLEXITY" missed="11" covered="22"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/ClassLoaderObjectInputStream" sourcefilename="ClassLoaderObjectInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/lang/ClassLoader;Ljava/io/InputStream;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveClass" desc="(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;" line="68"><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveProxyClass" desc="([Ljava/lang/String;)Ljava/lang/Class;" line="93"><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/NullInputStream" sourcefilename="NullInputStream.java"><method name="&lt;init&gt;" desc="(J)V" line="80"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JZZ)V" line="67"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPosition" desc="()J" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()J" line="115"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="available" desc="()I" line="125"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="143"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(I)V" line="157"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markSupported" desc="()Z" line="171"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="186"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([B)I" line="209"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="227"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="253"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="281"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processByte" desc="()I" line="305"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processBytes" desc="([BII)V" line="320"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doEndOfFile" desc="()I" line="331"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="272"/><counter type="BRANCH" missed="1" covered="29"/><counter type="LINE" missed="3" covered="66"/><counter type="COMPLEXITY" missed="3" covered="28"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/DemuxInputStream" sourcefilename="DemuxInputStream.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bindStream" desc="(Ljava/io/InputStream;)Ljava/io/InputStream;" line="41"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="55"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="72"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="30"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/ProxyInputStream" sourcefilename="ProxyInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="57"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([B)I" line="76"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="97"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="116"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="available" desc="()I" line="131"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="145"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(I)V" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="167"><counter type="INSTRUCTION" missed="4" covered="5"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markSupported" desc="()Z" line="179"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRead" desc="(I)V" line="201"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterRead" desc="(I)V" line="221"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleIOException" desc="(Ljava/io/IOException;)V" line="233"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="85"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="17" covered="30"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/input/TeeInputStream" sourcefilename="TeeInputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;Z)V" line="76"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="()I" line="108"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([BII)I" line="127"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([B)I" line="144"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="60"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CharSequenceReader.java"><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="1" ci="6" mb="1" cb="1"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="2"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="2"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="1" cb="1"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="3" cb="3"/><line nr="108" mi="21" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="1" cb="1"/><line nr="141" mi="12" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="12" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="129"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="4" covered="33"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TailerListener.java"/><sourcefile name="XmlStreamReaderException.java"><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TaggedInputStream.java"><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlStreamReader.java"><line nr="81" mi="0" ci="15" mb="0" cb="0"/><line nr="86" mi="0" ci="103" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="11" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="8" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="3" ci="0" mb="0" cb="0"/><line nr="255" mi="11" ci="0" mb="0" cb="0"/><line nr="256" mi="7" ci="0" mb="0" cb="0"/><line nr="257" mi="5" ci="0" mb="4" cb="0"/><line nr="258" mi="9" ci="0" mb="0" cb="0"/><line nr="260" mi="7" ci="0" mb="0" cb="0"/><line nr="262" mi="8" ci="0" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="322" mi="0" ci="2" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="11" mb="0" cb="0"/><line nr="325" mi="0" ci="7" mb="0" cb="0"/><line nr="326" mi="0" ci="8" mb="0" cb="0"/><line nr="327" mi="0" ci="8" mb="0" cb="0"/><line nr="328" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="6" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="7" mb="0" cb="0"/><line nr="397" mi="3" ci="0" mb="0" cb="0"/><line nr="398" mi="1" ci="0" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="414" mi="0" ci="4" mb="0" cb="0"/><line nr="416" mi="0" ci="6" mb="0" cb="0"/><line nr="417" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="1" cb="1"/><line nr="419" mi="5" ci="0" mb="0" cb="0"/><line nr="421" mi="0" ci="2" mb="0" cb="0"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="0" ci="3" mb="0" cb="0"/><line nr="441" mi="0" ci="4" mb="0" cb="0"/><line nr="443" mi="0" ci="8" mb="0" cb="0"/><line nr="445" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="2"/><line nr="447" mi="0" ci="5" mb="0" cb="0"/><line nr="449" mi="0" ci="2" mb="0" cb="0"/><line nr="465" mi="0" ci="6" mb="0" cb="4"/><line nr="466" mi="0" ci="5" mb="0" cb="0"/><line nr="467" mi="0" ci="9" mb="0" cb="0"/><line nr="469" mi="0" ci="7" mb="0" cb="0"/><line nr="470" mi="0" ci="4" mb="0" cb="0"/><line nr="471" mi="1" ci="0" mb="0" cb="0"/><line nr="472" mi="2" ci="0" mb="0" cb="0"/><line nr="475" mi="0" ci="3" mb="0" cb="0"/><line nr="476" mi="0" ci="2" mb="1" cb="1"/><line nr="477" mi="0" ci="3" mb="0" cb="0"/><line nr="479" mi="0" ci="2" mb="0" cb="2"/><line nr="480" mi="0" ci="8" mb="0" cb="2"/><line nr="482" mi="0" ci="2" mb="0" cb="0"/><line nr="498" mi="0" ci="2" mb="0" cb="2"/><line nr="499" mi="0" ci="4" mb="0" cb="4"/><line nr="500" mi="0" ci="8" mb="0" cb="2"/><line nr="502" mi="0" ci="6" mb="0" cb="2"/><line nr="503" mi="0" ci="6" mb="1" cb="3"/><line nr="504" mi="0" ci="2" mb="0" cb="0"/><line nr="506" mi="0" ci="2" mb="0" cb="0"/><line nr="510" mi="0" ci="4" mb="0" cb="2"/><line nr="511" mi="0" ci="6" mb="0" cb="4"/><line nr="512" mi="0" ci="17" mb="0" cb="0"/><line nr="513" mi="0" ci="8" mb="0" cb="0"/><line nr="515" mi="0" ci="6" mb="0" cb="4"/><line nr="516" mi="0" ci="17" mb="0" cb="0"/><line nr="517" mi="0" ci="8" mb="0" cb="0"/><line nr="519" mi="0" ci="2" mb="0" cb="0"/><line nr="523" mi="0" ci="8" mb="0" cb="4"/><line nr="524" mi="0" ci="6" mb="0" cb="4"/><line nr="525" mi="0" ci="17" mb="0" cb="0"/><line nr="526" mi="0" ci="8" mb="0" cb="0"/><line nr="528" mi="0" ci="10" mb="0" cb="6"/><line nr="529" mi="0" ci="17" mb="0" cb="0"/><line nr="530" mi="0" ci="8" mb="0" cb="0"/><line nr="532" mi="0" ci="2" mb="0" cb="0"/><line nr="536" mi="0" ci="17" mb="0" cb="0"/><line nr="537" mi="0" ci="8" mb="0" cb="0"/><line nr="558" mi="0" ci="4" mb="0" cb="4"/><line nr="559" mi="0" ci="2" mb="0" cb="0"/><line nr="563" mi="0" ci="3" mb="0" cb="0"/><line nr="564" mi="0" ci="3" mb="0" cb="0"/><line nr="565" mi="0" ci="3" mb="0" cb="0"/><line nr="566" mi="0" ci="3" mb="0" cb="0"/><line nr="569" mi="0" ci="4" mb="0" cb="4"/><line nr="570" mi="0" ci="25" mb="0" cb="0"/><line nr="571" mi="0" ci="10" mb="0" cb="0"/><line nr="575" mi="0" ci="2" mb="0" cb="2"/><line nr="576" mi="0" ci="2" mb="0" cb="2"/><line nr="577" mi="0" ci="6" mb="0" cb="0"/><line nr="579" mi="0" ci="8" mb="0" cb="2"/><line nr="584" mi="0" ci="8" mb="0" cb="4"/><line nr="585" mi="0" ci="2" mb="0" cb="2"/><line nr="586" mi="0" ci="25" mb="0" cb="0"/><line nr="587" mi="0" ci="10" mb="0" cb="0"/><line nr="589" mi="0" ci="2" mb="0" cb="0"/><line nr="593" mi="0" ci="4" mb="0" cb="2"/><line nr="594" mi="0" ci="6" mb="0" cb="4"/><line nr="595" mi="0" ci="2" mb="0" cb="0"/><line nr="597" mi="0" ci="25" mb="0" cb="0"/><line nr="598" mi="0" ci="10" mb="0" cb="0"/><line nr="601" mi="0" ci="2" mb="0" cb="0"/><line nr="611" mi="0" ci="2" mb="0" cb="0"/><line nr="612" mi="0" ci="2" mb="0" cb="2"/><line nr="613" mi="0" ci="4" mb="0" cb="0"/><line nr="614" mi="0" ci="2" mb="0" cb="2"/><line nr="615" mi="0" ci="6" mb="0" cb="0"/><line nr="617" mi="0" ci="2" mb="0" cb="0"/><line nr="619" mi="0" ci="3" mb="0" cb="0"/><line nr="621" mi="0" ci="2" mb="0" cb="0"/><line nr="624" mi="0" ci="1" mb="0" cb="0"/><line nr="625" mi="0" ci="2" mb="0" cb="0"/><line nr="635" mi="0" ci="2" mb="0" cb="0"/><line nr="636" mi="0" ci="2" mb="0" cb="2"/><line nr="637" mi="0" ci="4" mb="0" cb="0"/><line nr="638" mi="0" ci="3" mb="0" cb="2"/><line nr="639" mi="0" ci="6" mb="0" cb="0"/><line nr="640" mi="0" ci="4" mb="0" cb="0"/><line nr="641" mi="0" ci="9" mb="0" cb="2"/><line nr="642" mi="0" ci="8" mb="0" cb="2"/><line nr="645" mi="0" ci="2" mb="0" cb="0"/><line nr="648" mi="0" ci="5" mb="0" cb="0"/><line nr="662" mi="0" ci="2" mb="0" cb="0"/><line nr="663" mi="0" ci="2" mb="0" cb="2"/><line nr="664" mi="0" ci="3" mb="0" cb="0"/><line nr="665" mi="0" ci="3" mb="0" cb="0"/><line nr="666" mi="0" ci="2" mb="0" cb="0"/><line nr="667" mi="0" ci="2" mb="0" cb="0"/><line nr="668" mi="0" ci="6" mb="0" cb="0"/><line nr="669" mi="0" ci="2" mb="0" cb="0"/><line nr="670" mi="0" ci="2" mb="0" cb="0"/><line nr="671" mi="0" ci="9" mb="1" cb="5"/><line nr="672" mi="0" ci="4" mb="0" cb="0"/><line nr="673" mi="0" ci="4" mb="0" cb="0"/><line nr="674" mi="0" ci="6" mb="0" cb="0"/><line nr="675" mi="0" ci="8" mb="0" cb="0"/><line nr="676" mi="0" ci="5" mb="0" cb="0"/><line nr="678" mi="0" ci="3" mb="1" cb="1"/><line nr="679" mi="3" ci="0" mb="2" cb="0"/><line nr="680" mi="5" ci="0" mb="0" cb="0"/><line nr="682" mi="14" ci="0" mb="0" cb="0"/><line nr="687" mi="0" ci="2" mb="0" cb="0"/><line nr="688" mi="0" ci="2" mb="1" cb="1"/><line nr="689" mi="0" ci="2" mb="0" cb="0"/><line nr="690" mi="0" ci="9" mb="0" cb="0"/><line nr="691" mi="0" ci="4" mb="0" cb="0"/><line nr="692" mi="0" ci="4" mb="0" cb="0"/><line nr="693" mi="0" ci="3" mb="0" cb="0"/><line nr="694" mi="0" ci="2" mb="0" cb="2"/><line nr="695" mi="0" ci="4" mb="0" cb="0"/><line nr="696" mi="0" ci="4" mb="0" cb="0"/><line nr="698" mi="0" ci="4" mb="0" cb="0"/><line nr="699" mi="0" ci="3" mb="0" cb="2"/><line nr="700" mi="0" ci="5" mb="0" cb="0"/><line nr="701" mi="0" ci="8" mb="0" cb="0"/><line nr="705" mi="0" ci="2" mb="0" cb="0"/><line nr="716" mi="0" ci="5" mb="0" cb="2"/><line nr="717" mi="0" ci="4" mb="0" cb="2"/><line nr="718" mi="0" ci="4" mb="0" cb="2"/><line nr="719" mi="0" ci="4" mb="0" cb="2"/><line nr="720" mi="0" ci="9" mb="0" cb="4"/><line nr="731" mi="0" ci="5" mb="0" cb="2"/><line nr="732" mi="0" ci="4" mb="0" cb="2"/><line nr="733" mi="0" ci="4" mb="0" cb="2"/><line nr="734" mi="0" ci="9" mb="0" cb="4"/><counter type="INSTRUCTION" missed="111" covered="941"/><counter type="BRANCH" missed="12" covered="122"/><counter type="LINE" missed="25" covered="161"/><counter type="COMPLEXITY" missed="14" covered="77"/><counter type="METHOD" missed="5" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NullInputStream.java"><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="1" cb="1"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="2"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="2"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="2"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="2"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="2"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="7" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="2"/><line nr="236" mi="0" ci="9" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="2"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="2"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="9" mb="0" cb="2"/><line nr="260" mi="0" ci="20" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="2"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="6" mb="0" cb="2"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="6" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="6" mb="0" cb="2"/><line nr="290" mi="0" ci="8" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="0" cb="2"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="272"/><counter type="BRANCH" missed="1" covered="29"/><counter type="LINE" missed="3" covered="66"/><counter type="COMPLEXITY" missed="3" covered="28"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tailer.java"><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="151" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="8" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="6" ci="0" mb="0" cb="0"/><line nr="209" mi="6" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="227" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="4"/><line nr="241" mi="0" ci="7" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="2"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="250" mi="1" ci="1" mb="0" cb="0"/><line nr="253" mi="4" ci="5" mb="1" cb="1"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="2"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="2"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="7" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="1" ci="0" mb="0" cb="0"/><line nr="280" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="2"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="2"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="304" mi="0" ci="2" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="316" mi="4" ci="0" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="1" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="2" mb="0" cb="2"/><line nr="341" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="2" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="6" mb="0" cb="2"/><line nr="360" mi="0" ci="2" mb="1" cb="2"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="364" mi="2" ci="0" mb="0" cb="0"/><line nr="365" mi="1" ci="0" mb="0" cb="0"/><line nr="367" mi="0" ci="2" mb="1" cb="1"/><line nr="368" mi="4" ci="0" mb="0" cb="0"/><line nr="369" mi="2" ci="0" mb="0" cb="0"/><line nr="371" mi="0" ci="6" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="202"/><counter type="BRANCH" missed="3" covered="22"/><counter type="LINE" missed="18" covered="68"/><counter type="COMPLEXITY" missed="9" covered="16"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CloseShieldInputStream.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NullReader.java"><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="2"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="2"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="2"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="6" mb="0" cb="2"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="2"/><line nr="219" mi="0" ci="9" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="2"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="2"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="9" mb="0" cb="2"/><line nr="243" mi="0" ci="20" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="2"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="6" mb="0" cb="2"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="6" mb="0" cb="2"/><line nr="273" mi="0" ci="8" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="2"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="253"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="2" covered="61"/><counter type="COMPLEXITY" missed="2" covered="26"/><counter type="METHOD" missed="2" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProxyReader.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="5" mb="1" cb="1"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="5" mb="1" cb="1"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="51"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="41" covered="16"/><counter type="COMPLEXITY" missed="11" covered="6"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BoundedInputStream.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="1" cb="3"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="4"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="17" mb="0" cb="2"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="15" ci="0" mb="2" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="6" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="11" ci="0" mb="4" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="2" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="84" covered="107"/><counter type="BRANCH" missed="9" covered="11"/><counter type="LINE" missed="21" covered="23"/><counter type="COMPLEXITY" missed="14" covered="10"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TeeInputStream.java"><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="2"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="60"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReversedLinesFileReader.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="2"/><line nr="83" mi="0" ci="10" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="2"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="11" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="8" mb="0" cb="4"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="2"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="14" mb="0" cb="0"/><line nr="119" mi="0" ci="22" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="2"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="4"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="9" mb="0" cb="2"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="2"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="1" cb="1"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="2"/><line nr="194" mi="0" ci="8" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="1" cb="1"/><line nr="209" mi="13" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="2"/><line nr="214" mi="0" ci="15" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="1" cb="1"/><line nr="218" mi="13" ci="0" mb="0" cb="0"/><line nr="219" mi="6" ci="0" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="9" mb="0" cb="2"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="2"/><line nr="241" mi="0" ci="7" mb="0" cb="4"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="8" mb="0" cb="2"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="7" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="1" cb="1"/><line nr="254" mi="12" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="259" mi="0" ci="8" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="2"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="4"/><line nr="278" mi="0" ci="9" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="1" cb="1"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="9" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="0" ci="18" mb="0" cb="2"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="9" mb="0" cb="2"/><line nr="311" mi="0" ci="9" mb="0" cb="0"/><line nr="312" mi="0" ci="15" mb="0" cb="4"/><line nr="314" mi="0" ci="2" mb="0" cb="2"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="487"/><counter type="BRANCH" missed="5" covered="63"/><counter type="LINE" missed="8" covered="98"/><counter type="COMPLEXITY" missed="6" covered="37"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AutoCloseInputStream.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CharSequenceInputStream.java"><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="9" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="1" cb="1"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="8" mb="2" cb="2"/><line nr="118" mi="21" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="2"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="4"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="2"/><line nr="129" mi="0" ci="4" mb="0" cb="2"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="1" cb="3"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="6" ci="4" mb="3" cb="1"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="1" cb="3"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="7" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="4"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="2"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="201"/><counter type="BRANCH" missed="9" covered="29"/><counter type="LINE" missed="7" covered="56"/><counter type="COMPLEXITY" missed="11" covered="22"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReaderInputStream.java"><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="6"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="11" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="2"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="11" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="1" cb="1"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="10" mb="3" cb="3"/><line nr="227" mi="21" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="2"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="2"/><line nr="235" mi="0" ci="4" mb="0" cb="2"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="7" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="7" mb="1" cb="3"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="9" mb="1" cb="3"/><line nr="261" mi="7" ci="0" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="2"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="7" mb="1" cb="3"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="221"/><counter type="BRANCH" missed="7" covered="29"/><counter type="LINE" missed="5" covered="57"/><counter type="COMPLEXITY" missed="9" covered="21"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DemuxInputStream.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="1" cb="1"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="30"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TailerListenerAdapter.java"><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CountingInputStream.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="2"/><line nr="90" mi="0" ci="14" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="108" mi="0" ci="14" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BrokenInputStream.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BOMInputStream.java"><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="4"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="2"/><line nr="154" mi="0" ci="5" mb="0" cb="2"/><line nr="155" mi="0" ci="12" mb="0" cb="0"/><line nr="157" mi="0" ci="12" mb="0" cb="4"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="11" mb="0" cb="2"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="9" mb="0" cb="2"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="2"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="2"/><line nr="183" mi="0" ci="3" mb="0" cb="2"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="9" mb="0" cb="2"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="18" mb="0" cb="2"/><line nr="224" mi="0" ci="11" mb="0" cb="2"/><line nr="225" mi="0" ci="4" mb="0" cb="2"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="2"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="8" mb="0" cb="2"/><line nr="243" mi="0" ci="8" mb="0" cb="2"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="8" mb="0" cb="2"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="4"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="0" cb="2"/><line nr="282" mi="0" ci="8" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="7" mb="0" cb="0"/><line nr="288" mi="0" ci="12" mb="0" cb="4"/><line nr="301" mi="0" ci="7" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="8" mb="0" cb="2"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="2"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="338" mi="0" ci="7" mb="0" cb="4"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="341" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="348"/><counter type="BRANCH" missed="0" covered="58"/><counter type="LINE" missed="0" covered="73"/><counter type="COMPLEXITY" missed="0" covered="46"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProxyInputStream.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="2"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="7" mb="1" cb="1"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="85"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="17" covered="30"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClosedInputStream.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassLoaderObjectInputStream.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="1" cb="1"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="2"/><line nr="95" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SwappedDataInputStream.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="2"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="2"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="1" cb="1"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="98"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="1" covered="18"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="650" covered="3743"/><counter type="BRANCH" missed="64" covered="433"/><counter type="LINE" missed="175" covered="867"/><counter type="COMPLEXITY" missed="103" covered="384"/><counter type="METHOD" missed="50" covered="188"/><counter type="CLASS" missed="1" covered="24"/></package><package name="org/apache/commons/io/output"><class name="org/apache/commons/io/output/ProxyOutputStream" sourcefilename="ProxyOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="54"><counter type="INSTRUCTION" missed="3" covered="13"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([B)V" line="70"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BII)V" line="89"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="104"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="117"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeWrite" desc="(I)V" line="137"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterWrite" desc="(I)V" line="154"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleIOException" desc="(Ljava/io/IOException;)V" line="166"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="66"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="7" covered="30"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/XmlStreamWriter" sourcefilename="XmlStreamWriter.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;Ljava/lang/String;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="84"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/String;)V" line="97"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEncoding" desc="()Ljava/lang/String;" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultEncoding" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="125"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="140"><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detectEncoding" desc="([CII)V" line="155"><counter type="INSTRUCTION" missed="23" covered="97"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="4" covered="22"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CII)V" line="212"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="219"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="167"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="11" covered="42"/><counter type="COMPLEXITY" missed="10" covered="13"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/NullOutputStream" sourcefilename="NullOutputStream.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BII)V" line="46"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="55"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([B)V" line="65"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/TeeOutputStream" sourcefilename="TeeOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;Ljava/io/OutputStream;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([B)V" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BII)V" line="64"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="75"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/ClosedOutputStream" sourcefilename="ClosedOutputStream.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="48"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/NullWriter" sourcefilename="NullWriter.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(C)Ljava/io/Writer;" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/io/Writer;" line="65"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/io/Writer;" line="77"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="87"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([C)V" line="96"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CII)V" line="107"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;II)V" line="127"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="133"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="139"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/ByteArrayOutputStream" sourcefilename="ByteArrayOutputStream.java"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="60"><counter type="INSTRUCTION" missed="12" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="needNewBuffer" desc="(I)V" line="102"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BII)V" line="135"><counter type="INSTRUCTION" missed="4" covered="78"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="167"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/io/InputStream;)I" line="188"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="209"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="223"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="229"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/io/OutputStream;)V" line="244"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBufferedInputStream" desc="(Ljava/io/InputStream;)Ljava/io/InputStream;" line="278"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBufferedInputStream" desc="()Ljava/io/InputStream;" line="294"><counter type="INSTRUCTION" missed="4" covered="51"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toByteArray" desc="()[B" line="318"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="343"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="356"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="454"/><counter type="BRANCH" missed="10" covered="34"/><counter type="LINE" missed="3" covered="106"/><counter type="COMPLEXITY" missed="10" covered="28"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/CountingOutputStream" sourcefilename="CountingOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeWrite" desc="(I)V" line="54"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCount" desc="()I" line="69"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetCount" desc="()I" line="87"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByteCount" desc="()J" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetByteCount" desc="()J" line="119"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/ThresholdingOutputStream" sourcefilename="ThresholdingOutputStream.java"><method name="&lt;init&gt;" desc="(I)V" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="92"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([B)V" line="109"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BII)V" line="128"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="143"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="158"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThreshold" desc="()I" line="178"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getByteCount" desc="()J" line="189"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isThresholdExceeded" desc="()Z" line="202"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkThreshold" desc="(I)V" line="221"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetByteCount" desc="()V" line="234"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="81"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="10" covered="22"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/TaggedOutputStream" sourcefilename="TaggedOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCauseOf" desc="(Ljava/lang/Exception;)Z" line="88"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwIfCauseOf" desc="(Ljava/lang/Exception;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleIOException" desc="(Ljava/io/IOException;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/FileWriterWithEncoding" sourcefilename="FileWriterWithEncoding.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="66"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Z)V" line="79"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)V" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;Z)V" line="104"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)V" line="116"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Z)V" line="129"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/String;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/String;Z)V" line="154"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)V" line="167"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/Charset;Z)V" line="180"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;)V" line="193"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V" line="206"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initWriter" desc="(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;" line="223"><counter type="INSTRUCTION" missed="33" covered="50"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="9" covered="18"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="267"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([C)V" line="277"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([CII)V" line="289"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;)V" line="299"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;II)V" line="311"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="320"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="329"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="141" covered="78"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="39" covered="29"/><counter type="COMPLEXITY" missed="18" covered="8"/><counter type="METHOD" missed="14" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/ProxyWriter" sourcefilename="ProxyWriter.java"><method name="&lt;init&gt;" desc="(Ljava/io/Writer;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(C)Ljava/io/Writer;" line="55"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/io/Writer;" line="76"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/io/Writer;" line="95"><counter type="INSTRUCTION" missed="4" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="117"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([C)V" line="133"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CII)V" line="156"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;)V" line="172"><counter type="INSTRUCTION" missed="4" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;II)V" line="195"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="210"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="close" desc="()V" line="223"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeWrite" desc="(I)V" line="243"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterWrite" desc="(I)V" line="260"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleIOException" desc="(Ljava/io/IOException;)V" line="272"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="98" covered="93"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="42" covered="38"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="6" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/CloseShieldOutputStream" sourcefilename="CloseShieldOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/BrokenOutputStream" sourcefilename="BrokenOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/IOException;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/DeferredFileOutputStream" sourcefilename="DeferredFileOutputStream.java"><method name="&lt;init&gt;" desc="(ILjava/io/File;)V" line="101"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStream" desc="()Ljava/io/OutputStream;" line="160"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="thresholdReached" desc="()V" line="175"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInMemory" desc="()Z" line="197"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()[B" line="211"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFile" desc="()Ljava/io/File;" line="235"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="247"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeTo" desc="(Ljava/io/OutputStream;)V" line="264"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/LockableFileWriter" sourcefilename="LockableFileWriter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="71"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Z)V" line="83"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ZLjava/lang/String;)V" line="96"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Z)V" line="120"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;ZLjava/lang/String;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/String;)V" line="145"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V" line="160"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testLockDir" desc="(Ljava/io/File;)V" line="195"><counter type="INSTRUCTION" missed="26" covered="7"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createLock" desc="()V" line="211"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initWriter" desc="(Ljava/io/File;Ljava/lang/String;Z)Ljava/io/Writer;" line="231"><counter type="INSTRUCTION" missed="22" covered="43"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="8" covered="15"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="270"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="284"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([C)V" line="294"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([CII)V" line="306"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;)V" line="316"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;II)V" line="328"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="337"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="115" covered="161"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="34" covered="47"/><counter type="COMPLEXITY" missed="16" covered="11"/><counter type="METHOD" missed="11" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/WriterOutputStream" sourcefilename="WriterOutputStream.java"><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;)V" line="104"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V" line="85"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V" line="140"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/nio/charset/Charset;)V" line="158"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/lang/String;IZ)V" line="174"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;Ljava/lang/String;)V" line="186"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/Writer;)V" line="197"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([BII)V" line="210"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([B)V" line="230"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="241"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="252"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="264"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processInput" desc="(Z)V" line="277"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flushOutput" desc="()V" line="301"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="163"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="7" covered="50"/><counter type="COMPLEXITY" missed="5" covered="14"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/StringBuilderWriter" sourcefilename="StringBuilderWriter.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="50"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/StringBuilder;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(C)Ljava/io/Writer;" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/io/Writer;" line="83"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/io/Writer;" line="97"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="106"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flush" desc="()V" line="113"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CII)V" line="137"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuilder" desc="()Ljava/lang/StringBuilder;" line="148"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="158"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="78"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/output/DemuxOutputStream" sourcefilename="DemuxOutputStream.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bindStream" desc="(Ljava/io/OutputStream;)Ljava/io/OutputStream;" line="41"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="55"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flush" desc="()V" line="71"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="88"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="31"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CloseShieldOutputStream.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TaggedOutputStream.java"><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThresholdingOutputStream.java"><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="11" mb="0" cb="2"/><line nr="221" mi="0" ci="13" mb="0" cb="4"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="81"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="10" covered="22"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NullWriter.java"><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringBuilderWriter.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="2"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="1" cb="1"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="1" cb="1"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="78"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NullOutputStream.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WriterOutputStream.java"><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="6" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="2"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="2"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="11" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="9" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="2"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="3" mb="1" cb="1"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="5" ci="0" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="1" cb="1"/><line nr="302" mi="0" ci="10" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="163"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="7" covered="50"/><counter type="COMPLEXITY" missed="5" covered="14"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BrokenOutputStream.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileWriterWithEncoding.java"><line nr="66" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="8" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="6" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="2"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="1" cb="1"/><line nr="227" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="1" cb="1"/><line nr="235" mi="8" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="1" cb="1"/><line nr="237" mi="8" ci="0" mb="0" cb="0"/><line nr="239" mi="0" ci="7" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="2"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="2" cb="0"/><line nr="252" mi="3" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="1" ci="0" mb="0" cb="0"/><line nr="289" mi="6" ci="0" mb="0" cb="0"/><line nr="290" mi="1" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="6" ci="0" mb="0" cb="0"/><line nr="312" mi="1" ci="0" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="141" covered="78"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="39" covered="29"/><counter type="COMPLEXITY" missed="18" covered="8"/><counter type="METHOD" missed="14" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ByteArrayOutputStream.java"><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="1" cb="1"/><line nr="87" mi="12" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="2"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="9" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="11" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="18" mb="5" cb="5"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="2"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="2"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><line nr="150" mi="0" ci="11" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="2"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="2"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="11" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="2"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="12" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="8" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="11" mb="1" cb="1"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="2"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="1" cb="1"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="298" mi="0" ci="7" mb="0" cb="0"/><line nr="299" mi="0" ci="11" mb="1" cb="1"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="9" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="2"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="2"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="324" mi="0" ci="11" mb="1" cb="1"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="6" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="2"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="2" mb="0" cb="0"/><line nr="343" mi="0" ci="6" mb="0" cb="0"/><line nr="356" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="454"/><counter type="BRANCH" missed="10" covered="34"/><counter type="LINE" missed="3" covered="106"/><counter type="COMPLEXITY" missed="10" covered="28"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CountingOutputStream.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="2"/><line nr="71" mi="0" ci="14" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="14" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClosedOutputStream.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProxyWriter.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="2"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="2"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="213" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="224" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="98" covered="93"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="42" covered="38"/><counter type="COMPLEXITY" missed="6" covered="11"/><counter type="METHOD" missed="6" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TeeOutputStream.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlStreamWriter.java"><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="9" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="1" cb="1"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="1" cb="1"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="2"/><line nr="164" mi="0" ci="7" mb="0" cb="2"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="1" cb="1"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="2"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="12" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="2" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="1" cb="1"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="9" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="1" cb="1"/><line nr="196" mi="10" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="1" cb="1"/><line nr="213" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="6" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="167"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="11" covered="42"/><counter type="COMPLEXITY" missed="10" covered="13"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DeferredFileOutputStream.java"><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="2"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="9" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="7" mb="0" cb="2"/><line nr="211" mi="0" ci="3" mb="0" cb="2"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="2"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DemuxOutputStream.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="1" cb="1"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="31"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProxyOutputStream.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="2"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="66"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="7" covered="30"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LockableFileWriter.java"><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="8" ci="0" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="6" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="1" cb="1"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="2"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="15" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="1" cb="1"/><line nr="196" mi="8" ci="0" mb="0" cb="0"/><line nr="197" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="1" cb="1"/><line nr="200" mi="8" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="2"/><line nr="213" mi="0" ci="9" mb="0" cb="0"/><line nr="214" mi="0" ci="7" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="2"/><line nr="236" mi="0" ci="8" mb="0" cb="0"/><line nr="238" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="6" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="1" cb="1"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="2" cb="0"/><line nr="254" mi="3" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="1" ci="0" mb="0" cb="0"/><line nr="294" mi="4" ci="0" mb="0" cb="0"/><line nr="295" mi="1" ci="0" mb="0" cb="0"/><line nr="306" mi="6" ci="0" mb="0" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="316" mi="4" ci="0" mb="0" cb="0"/><line nr="317" mi="1" ci="0" mb="0" cb="0"/><line nr="328" mi="6" ci="0" mb="0" cb="0"/><line nr="329" mi="1" ci="0" mb="0" cb="0"/><line nr="337" mi="3" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="115" covered="161"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="34" covered="47"/><counter type="COMPLEXITY" missed="16" covered="11"/><counter type="METHOD" missed="11" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="527" covered="1729"/><counter type="BRANCH" missed="38" covered="112"/><counter type="LINE" missed="166" covered="507"/><counter type="COMPLEXITY" missed="80" covered="178"/><counter type="METHOD" missed="47" covered="136"/><counter type="CLASS" missed="0" covered="19"/></package><package name="org/apache/commons/io"><class name="org/apache/commons/io/FileExistsException" sourcefilename="FileExistsException.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="57"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="4"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/DirectoryWalker" sourcefilename="DirectoryWalker.java"><method name="&lt;init&gt;" desc="()V" line="266"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/FileFilter;I)V" line="281"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;I)V" line="300"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="walk" desc="(Ljava/io/File;Ljava/util/Collection;)V" line="330"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="walk" desc="(Ljava/io/File;ILjava/util/Collection;)V" line="351"><counter type="INSTRUCTION" missed="0" covered="108"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIfCancelled" desc="(Ljava/io/File;ILjava/util/Collection;)V" line="394"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleIsCancelled" desc="(Ljava/io/File;ILjava/util/Collection;)Z" line="437"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleCancelled" desc="(Ljava/io/File;Ljava/util/Collection;Lorg/apache/commons/io/DirectoryWalker$CancelException;)V" line="456"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleStart" desc="(Ljava/io/File;Ljava/util/Collection;)V" line="471"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleDirectory" desc="(Ljava/io/File;ILjava/util/Collection;)Z" line="490"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleDirectoryStart" desc="(Ljava/io/File;ILjava/util/Collection;)V" line="505"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterDirectoryContents" desc="(Ljava/io/File;I[Ljava/io/File;)[Ljava/io/File;" line="520"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleFile" desc="(Ljava/io/File;ILjava/util/Collection;)V" line="535"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleRestricted" desc="(Ljava/io/File;ILjava/util/Collection;)V" line="549"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleDirectoryEnd" desc="(Ljava/io/File;ILjava/util/Collection;)V" line="563"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleEnd" desc="(Ljava/util/Collection;)V" line="575"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="220"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="1" covered="56"/><counter type="COMPLEXITY" missed="1" covered="28"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/EndianUtils" sourcefilename="EndianUtils.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swapShort" desc="(S)S" line="56"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swapInteger" desc="(I)I" line="66"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swapLong" desc="(J)J" line="79"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swapFloat" desc="(F)F" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swapDouble" desc="(D)D" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSwappedShort" desc="([BIS)V" line="118"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedShort" desc="([BI)S" line="130"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedUnsignedShort" desc="([BI)I" line="143"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSwappedInteger" desc="([BII)V" line="155"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedInteger" desc="([BI)I" line="169"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedUnsignedInteger" desc="([BI)J" line="184"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSwappedLong" desc="([BIJ)V" line="201"><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedLong" desc="([BI)J" line="219"><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSwappedFloat" desc="([BIF)V" line="240"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedFloat" desc="([BI)F" line="251"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSwappedDouble" desc="([BID)V" line="262"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedDouble" desc="([BI)D" line="273"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSwappedShort" desc="(Ljava/io/OutputStream;S)V" line="286"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedShort" desc="(Ljava/io/InputStream;)S" line="300"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedUnsignedShort" desc="(Ljava/io/InputStream;)I" line="314"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSwappedInteger" desc="(Ljava/io/OutputStream;I)V" line="331"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedInteger" desc="(Ljava/io/InputStream;)I" line="347"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedUnsignedInteger" desc="(Ljava/io/InputStream;)J" line="368"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSwappedLong" desc="(Ljava/io/OutputStream;J)V" line="392"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedLong" desc="(Ljava/io/InputStream;)J" line="412"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSwappedFloat" desc="(Ljava/io/OutputStream;F)V" line="429"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedFloat" desc="(Ljava/io/InputStream;)F" line="442"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeSwappedDouble" desc="(Ljava/io/OutputStream;D)V" line="455"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readSwappedDouble" desc="(Ljava/io/InputStream;)D" line="468"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/InputStream;)I" line="480"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="819"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="87"/><counter type="COMPLEXITY" missed="0" covered="33"/><counter type="METHOD" missed="0" covered="31"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/FileUtils" sourcefilename="FileUtils.java"><method name="&lt;init&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFile" desc="(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File;" line="147"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFile" desc="([Ljava/lang/String;)Ljava/io/File;" line="168"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTempDirectoryPath" desc="()Ljava/lang/String;" line="190"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTempDirectory" desc="()Ljava/io/File;" line="201"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUserDirectoryPath" desc="()Ljava/lang/String;" line="212"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUserDirectory" desc="()Ljava/io/File;" line="223"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="openInputStream" desc="(Ljava/io/File;)Ljava/io/FileInputStream;" line="246"><counter type="INSTRUCTION" missed="14" covered="42"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="openOutputStream" desc="(Ljava/io/File;)Ljava/io/FileOutputStream;" line="281"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="openOutputStream" desc="(Ljava/io/File;Z)Ljava/io/FileOutputStream;" line="307"><counter type="INSTRUCTION" missed="14" covered="54"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byteCountToDisplaySize" desc="(J)Ljava/lang/String;" line="342"><counter type="INSTRUCTION" missed="0" covered="126"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="touch" desc="(Ljava/io/File;)V" line="374"><counter type="INSTRUCTION" missed="12" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFileCollectionToFileArray" desc="(Ljava/util/Collection;)[Ljava/io/File;" line="394"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="innerListFiles" desc="(Ljava/util/Collection;Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Z)V" line="409"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listFiles" desc="(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;" line="452"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateListFilesParameters" desc="(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;)V" line="475"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUpEffectiveFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="490"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUpEffectiveDirFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="500"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listFilesAndDirs" desc="(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;" line="524"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterateFiles" desc="(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Iterator;" line="559"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterateFilesAndDirs" desc="(Ljava/io/File;Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Iterator;" line="583"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSuffixes" desc="([Ljava/lang/String;)[Ljava/lang/String;" line="595"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listFiles" desc="(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Collection;" line="616"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterateFiles" desc="(Ljava/io/File;[Ljava/lang/String;Z)Ljava/util/Iterator;" line="641"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contentEquals" desc="(Ljava/io/File;Ljava/io/File;)Z" line="661"><counter type="INSTRUCTION" missed="2" covered="62"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contentEqualsIgnoreEOL" desc="(Ljava/io/File;Ljava/io/File;Ljava/lang/String;)Z" line="718"><counter type="INSTRUCTION" missed="20" covered="63"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toFile" desc="(Ljava/net/URL;)Ljava/io/File;" line="772"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodeUrl" desc="(Ljava/lang/String;)Ljava/lang/String;" line="796"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toFiles" desc="([Ljava/net/URL;)[Ljava/io/File;" line="848"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toURLs" desc="([Ljava/io/File;)[Ljava/net/URL;" line="875"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFileToDirectory" desc="(Ljava/io/File;Ljava/io/File;)V" line="907"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFileToDirectory" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="936"><counter type="INSTRUCTION" missed="19" covered="20"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFile" desc="(Ljava/io/File;Ljava/io/File;)V" line="968"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFile" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="997"><counter type="INSTRUCTION" missed="69" covered="53"/><counter type="BRANCH" missed="10" covered="10"/><counter type="LINE" missed="6" covered="12"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFile" desc="(Ljava/io/File;Ljava/io/OutputStream;)J" line="1042"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCopyFile" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="1059"><counter type="INSTRUCTION" missed="37" covered="79"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyDirectoryToDirectory" desc="(Ljava/io/File;Ljava/io/File;)V" line="1120"><counter type="INSTRUCTION" missed="38" covered="26"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyDirectory" desc="(Ljava/io/File;Ljava/io/File;)V" line="1160"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyDirectory" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="1191"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyDirectory" desc="(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;)V" line="1240"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyDirectory" desc="(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V" line="1291"><counter type="INSTRUCTION" missed="3" covered="132"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCopyDirectory" desc="(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;ZLjava/util/List;)V" line="1336"><counter type="INSTRUCTION" missed="43" covered="89"/><counter type="BRANCH" missed="5" covered="19"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyURLToFile" desc="(Ljava/net/URL;Ljava/io/File;)V" line="1390"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyURLToFile" desc="(Ljava/net/URL;Ljava/io/File;II)V" line="1416"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyInputStreamToFile" desc="(Ljava/io/InputStream;Ljava/io/File;)V" line="1440"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteDirectory" desc="(Ljava/io/File;)V" line="1460"><counter type="INSTRUCTION" missed="16" covered="13"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteQuietly" desc="(Ljava/io/File;)Z" line="1491"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="directoryContains" desc="(Ljava/io/File;Ljava/io/File;)Z" line="1535"><counter type="INSTRUCTION" missed="5" covered="39"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanDirectory" desc="(Ljava/io/File;)V" line="1565"><counter type="INSTRUCTION" missed="45" covered="36"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="8" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="waitFor" desc="(Ljava/io/File;I)Z" line="1607"><counter type="INSTRUCTION" missed="6" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFileToString" desc="(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String;" line="1639"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFileToString" desc="(Ljava/io/File;)Ljava/lang/String;" line="1659"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFileToByteArray" desc="(Ljava/io/File;)[B" line="1672"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLines" desc="(Ljava/io/File;Ljava/lang/String;)Ljava/util/List;" line="1693"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLines" desc="(Ljava/io/File;)Ljava/util/List;" line="1712"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lineIterator" desc="(Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;" line="1747"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lineIterator" desc="(Ljava/io/File;)Lorg/apache/commons/io/LineIterator;" line="1770"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeStringToFile" desc="(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V" line="1787"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeStringToFile" desc="(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Z)V" line="1803"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeStringToFile" desc="(Ljava/io/File;Ljava/lang/String;)V" line="1821"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeStringToFile" desc="(Ljava/io/File;Ljava/lang/String;Z)V" line="1835"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/io/File;Ljava/lang/CharSequence;)V" line="1847"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/io/File;Ljava/lang/CharSequence;Z)V" line="1861"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/io/File;Ljava/lang/CharSequence;Ljava/lang/String;)V" line="1875"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/io/File;Ljava/lang/CharSequence;Ljava/lang/String;Z)V" line="1891"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeByteArrayToFile" desc="(Ljava/io/File;[B)V" line="1907"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeByteArrayToFile" desc="(Ljava/io/File;[BZ)V" line="1921"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;)V" line="1947"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Z)V" line="1965"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/util/Collection;)V" line="1979"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/util/Collection;Z)V" line="1995"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;)V" line="2016"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Z)V" line="2036"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/util/Collection;Ljava/lang/String;)V" line="2058"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/io/File;Ljava/util/Collection;Ljava/lang/String;Z)V" line="2076"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forceDelete" desc="(Ljava/io/File;)V" line="2096"><counter type="INSTRUCTION" missed="14" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forceDeleteOnExit" desc="(Ljava/io/File;)V" line="2120"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteDirectoryOnExit" desc="(Ljava/io/File;)V" line="2135"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanDirectoryOnExit" desc="(Ljava/io/File;)V" line="2153"><counter type="INSTRUCTION" missed="45" covered="36"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="8" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forceMkdir" desc="(Ljava/io/File;)V" line="2194"><counter type="INSTRUCTION" missed="17" covered="26"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeOf" desc="(Ljava/io/File;)J" line="2238"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeOfDirectory" desc="(Ljava/io/File;)J" line="2259"><counter type="INSTRUCTION" missed="2" covered="64"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFileNewer" desc="(Ljava/io/File;Ljava/io/File;)Z" line="2297"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFileNewer" desc="(Ljava/io/File;Ljava/util/Date;)Z" line="2320"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFileNewer" desc="(Ljava/io/File;J)Z" line="2339"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFileOlder" desc="(Ljava/io/File;Ljava/io/File;)Z" line="2364"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFileOlder" desc="(Ljava/io/File;Ljava/util/Date;)Z" line="2387"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFileOlder" desc="(Ljava/io/File;J)Z" line="2406"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checksumCRC32" desc="(Ljava/io/File;)J" line="2428"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checksum" desc="(Ljava/io/File;Ljava/util/zip/Checksum;)Ljava/util/zip/Checksum;" line="2451"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveDirectory" desc="(Ljava/io/File;Ljava/io/File;)V" line="2478"><counter type="INSTRUCTION" missed="18" covered="102"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveDirectoryToDirectory" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="2521"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveFile" desc="(Ljava/io/File;Ljava/io/File;)V" line="2555"><counter type="INSTRUCTION" missed="14" covered="102"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveFileToDirectory" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="2598"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveToDirectory" desc="(Ljava/io/File;Ljava/io/File;Z)V" line="2633"><counter type="INSTRUCTION" missed="10" covered="34"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSymlink" desc="(Ljava/io/File;)Z" line="2664"><counter type="INSTRUCTION" missed="34" covered="6"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="9" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="120"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="531" covered="2423"/><counter type="BRANCH" missed="73" covered="321"/><counter type="LINE" missed="79" covered="550"/><counter type="COMPLEXITY" missed="70" covered="224"/><counter type="METHOD" missed="3" covered="94"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/ByteOrderMark" sourcefilename="ByteOrderMark.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;[I)V" line="69"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCharsetName" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()I" line="96"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="106"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBytes" desc="()[B" line="115"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="131"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="154"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="168"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="295"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/FilenameUtils" sourcefilename="FilenameUtils.java"><method name="&lt;init&gt;" desc="()V" line="128"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSystemWindows" desc="()Z" line="138"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSeparator" desc="(C)Z" line="149"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalize" desc="(Ljava/lang/String;)Ljava/lang/String;" line="194"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalize" desc="(Ljava/lang/String;Z)Ljava/lang/String;" line="241"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeNoEndSeparator" desc="(Ljava/lang/String;)Ljava/lang/String;" line="288"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeNoEndSeparator" desc="(Ljava/lang/String;Z)Ljava/lang/String;" line="335"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doNormalize" desc="(Ljava/lang/String;CZ)Ljava/lang/String;" line="348"><counter type="INSTRUCTION" missed="0" covered="304"/><counter type="BRANCH" missed="2" covered="58"/><counter type="LINE" missed="0" covered="52"/><counter type="COMPLEXITY" missed="2" covered="29"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concat" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="482"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="directoryContains" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="531"><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="separatorsToUnix" desc="(Ljava/lang/String;)Ljava/lang/String;" line="554"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="separatorsToWindows" desc="(Ljava/lang/String;)Ljava/lang/String;" line="567"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="separatorsToSystem" desc="(Ljava/lang/String;)Ljava/lang/String;" line="580"><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrefixLength" desc="(Ljava/lang/String;)I" line="623"><counter type="INSTRUCTION" missed="0" covered="165"/><counter type="BRANCH" missed="1" covered="49"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="1" covered="25"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOfLastSeparator" desc="(Ljava/lang/String;)I" line="689"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOfExtension" desc="(Ljava/lang/String;)I" line="711"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrefix" desc="(Ljava/lang/String;)Ljava/lang/String;" line="750"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(Ljava/lang/String;)Ljava/lang/String;" line="786"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPathNoEndSeparator" desc="(Ljava/lang/String;)Ljava/lang/String;" line="813"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doGetPath" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="824"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFullPath" desc="(Ljava/lang/String;)Ljava/lang/String;" line="865"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFullPathNoEndSeparator" desc="(Ljava/lang/String;)Ljava/lang/String;" line="895"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doGetFullPath" desc="(Ljava/lang/String;Z)Ljava/lang/String;" line="906"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="949"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBaseName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="974"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtension" desc="(Ljava/lang/String;)Ljava/lang/String;" line="996"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeExtension" desc="(Ljava/lang/String;)Ljava/lang/String;" line="1026"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1050"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalsOnSystem" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1065"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalsNormalized" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1081"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalsNormalizedOnSystem" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1098"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z" line="1116"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExtension" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1146"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExtension" desc="(Ljava/lang/String;[Ljava/lang/String;)Z" line="1168"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExtension" desc="(Ljava/lang/String;Ljava/util/Collection;)Z" line="1195"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wildcardMatch" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1234"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wildcardMatchOnSystem" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="1260"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wildcardMatch" desc="(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z" line="1278"><counter type="INSTRUCTION" missed="2" covered="156"/><counter type="BRANCH" missed="1" covered="35"/><counter type="LINE" missed="1" covered="42"/><counter type="COMPLEXITY" missed="1" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitOnTokens" desc="(Ljava/lang/String;)[Ljava/lang/String;" line="1371"><counter type="INSTRUCTION" missed="0" covered="108"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="95"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="1290"/><counter type="BRANCH" missed="11" covered="291"/><counter type="LINE" missed="8" covered="297"/><counter type="COMPLEXITY" missed="12" covered="179"/><counter type="METHOD" missed="1" covered="39"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/FileSystemUtils" sourcefilename="FileSystemUtils.java"><method name="&lt;init&gt;" desc="()V" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="freeSpace" desc="(Ljava/lang/String;)J" line="142"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="freeSpaceKb" desc="(Ljava/lang/String;)J" line="171"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="freeSpaceKb" desc="(Ljava/lang/String;J)J" line="200"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="freeSpaceKb" desc="()J" line="216"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="freeSpaceKb" desc="(J)J" line="234"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="freeSpaceOS" desc="(Ljava/lang/String;IZJ)J" line="259"><counter type="INSTRUCTION" missed="7" covered="40"/><counter type="BRANCH" missed="1" covered="8"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="freeSpaceWindows" desc="(Ljava/lang/String;J)J" line="288"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseDir" desc="(Ljava/lang/String;Ljava/lang/String;)J" line="328"><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="freeSpaceUnix" desc="(Ljava/lang/String;ZZJ)J" line="380"><counter type="INSTRUCTION" missed="20" covered="142"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseBytes" desc="(Ljava/lang/String;Ljava/lang/String;)J" line="437"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="performCommand" desc="([Ljava/lang/String;IJ)Ljava/util/List;" line="472"><counter type="INSTRUCTION" missed="19" covered="119"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="33"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="openProcess" desc="([Ljava/lang/String;)Ljava/lang/Process;" line="535"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="81" covered="31"/><counter type="BRANCH" missed="26" covered="2"/><counter type="LINE" missed="20" covered="12"/><counter type="COMPLEXITY" missed="14" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="138" covered="591"/><counter type="BRANCH" missed="32" covered="61"/><counter type="LINE" missed="27" covered="122"/><counter type="COMPLEXITY" missed="22" covered="40"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/IOCase" sourcefilename="IOCase.java"><method name="forName" desc="(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;" line="81"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Z)V" line="100"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readResolve" desc="()Ljava/lang/Object;" line="112"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCaseSensitive" desc="()Z" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkCompareTo" desc="(Ljava/lang/String;Ljava/lang/String;)I" line="147"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkEquals" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="165"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkStartsWith" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="183"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkEndsWith" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="198"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIndexOf" desc="(Ljava/lang/String;ILjava/lang/String;)I" line="218"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkRegionMatches" desc="(Ljava/lang/String;ILjava/lang/String;)Z" line="242"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="253"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="189"/><counter type="BRANCH" missed="1" covered="31"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="1" covered="28"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/DirectoryWalker$CancelException" sourcefilename="DirectoryWalker.java"><method name="&lt;init&gt;" desc="(Ljava/io/File;I)V" line="600"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/io/File;I)V" line="613"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFile" desc="()Ljava/io/File;" line="624"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDepth" desc="()I" line="633"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/FileCleaningTracker$Reaper" sourcefilename="FileCleaningTracker.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/FileCleaningTracker;)V" line="204"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="217"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/LineIterator" sourcefilename="LineIterator.java"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="88"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidLine" desc="(Ljava/lang/String;)Z" line="118"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextLine" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="154"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="165"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeQuietly" desc="(Lorg/apache/commons/io/LineIterator;)V" line="175"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="107"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/ThreadMonitor" sourcefilename="ThreadMonitor.java"><method name="start" desc="(J)Ljava/lang/Thread;" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="start" desc="(Ljava/lang/Thread;J)Ljava/lang/Thread;" line="68"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stop" desc="(Ljava/lang/Thread;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Thread;J)V" line="95"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/FileCleaningTracker$Tracker" sourcefilename="FileCleaningTracker.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/io/FileDeleteStrategy;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V" line="257"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="()Ljava/lang/String;" line="268"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="()Z" line="278"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/FileCleaner" sourcefilename="FileCleaner.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="track" desc="(Ljava/io/File;Ljava/lang/Object;)V" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="track" desc="(Ljava/io/File;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V" line="74"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="track" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="track" desc="(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V" line="105"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTrackCount" desc="()I" line="118"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitWhenFinished" desc="()V" line="145"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Lorg/apache/commons/io/FileCleaningTracker;" line="157"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="7"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/FileDeleteStrategy$ForceFileDeleteStrategy" sourcefilename="FileDeleteStrategy.java"><method name="&lt;init&gt;" desc="()V" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doDelete" desc="(Ljava/io/File;)Z" line="152"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/FileDeleteStrategy" sourcefilename="FileDeleteStrategy.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteQuietly" desc="(Ljava/io/File;)Z" line="72"><counter type="INSTRUCTION" missed="3" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="(Ljava/io/File;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doDelete" desc="(Ljava/io/File;)Z" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="126"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="62"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/IOUtils" sourcefilename="IOUtils.java"><method name="&lt;init&gt;" desc="()V" line="147"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeQuietly" desc="(Ljava/io/Reader;)V" line="175"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeQuietly" desc="(Ljava/io/Writer;)V" line="201"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeQuietly" desc="(Ljava/io/InputStream;)V" line="228"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeQuietly" desc="(Ljava/io/OutputStream;)V" line="256"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeQuietly" desc="(Ljava/io/Closeable;)V" line="284"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeQuietly" desc="(Ljava/net/Socket;)V" line="316"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeQuietly" desc="(Ljava/nio/channels/Selector;)V" line="349"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeQuietly" desc="(Ljava/net/ServerSocket;)V" line="382"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBufferedInputStream" desc="(Ljava/io/InputStream;)Ljava/io/InputStream;" line="413"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBufferedReader" desc="(Ljava/io/Reader;)Ljava/io/BufferedReader;" line="426"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toByteArray" desc="(Ljava/io/InputStream;)[B" line="443"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toByteArray" desc="(Ljava/io/InputStream;J)[B" line="466"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toByteArray" desc="(Ljava/io/InputStream;I)[B" line="486"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toByteArray" desc="(Ljava/io/Reader;)[B" line="522"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(Ljava/io/Reader;Ljava/lang/String;)[B" line="546"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toByteArray" desc="(Ljava/lang/String;)[B" line="565"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCharArray" desc="(Ljava/io/InputStream;)[C" line="584"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCharArray" desc="(Ljava/io/InputStream;Ljava/lang/String;)[C" line="608"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toCharArray" desc="(Ljava/io/Reader;)[C" line="626"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/io/InputStream;)Ljava/lang/String;" line="646"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;" line="667"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/io/Reader;)Ljava/lang/String;" line="684"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/net/URI;)Ljava/lang/String;" line="699"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/net/URI;Ljava/lang/String;)Ljava/lang/String;" line="714"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/net/URL;)Ljava/lang/String;" line="727"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="(Ljava/net/URL;Ljava/lang/String;)Ljava/lang/String;" line="742"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="([B)Ljava/lang/String;" line="762"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="([BLjava/lang/String;)Ljava/lang/String;" line="782"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLines" desc="(Ljava/io/InputStream;)Ljava/util/List;" line="805"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLines" desc="(Ljava/io/InputStream;Ljava/lang/String;)Ljava/util/List;" line="827"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readLines" desc="(Ljava/io/Reader;)Ljava/util/List;" line="849"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lineIterator" desc="(Ljava/io/Reader;)Lorg/apache/commons/io/LineIterator;" line="889"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lineIterator" desc="(Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/io/LineIterator;" line="924"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toInputStream" desc="(Ljava/lang/CharSequence;)Ljava/io/InputStream;" line="943"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toInputStream" desc="(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/io/InputStream;" line="960"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toInputStream" desc="(Ljava/lang/String;)Ljava/io/InputStream;" line="973"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toInputStream" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;" line="991"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BLjava/io/OutputStream;)V" line="1009"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BLjava/io/Writer;)V" line="1028"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BLjava/io/Writer;Ljava/lang/String;)V" line="1052"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CLjava/io/Writer;)V" line="1075"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CLjava/io/OutputStream;)V" line="1096"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([CLjava/io/OutputStream;Ljava/lang/String;)V" line="1121"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/CharSequence;Ljava/io/Writer;)V" line="1142"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/CharSequence;Ljava/io/OutputStream;)V" line="1162"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/CharSequence;Ljava/io/OutputStream;Ljava/lang/String;)V" line="1185"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;Ljava/io/Writer;)V" line="1202"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;Ljava/io/OutputStream;)V" line="1222"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V" line="1245"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/StringBuffer;Ljava/io/Writer;)V" line="1269"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/StringBuffer;Ljava/io/OutputStream;)V" line="1291"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/StringBuffer;Ljava/io/OutputStream;Ljava/lang/String;)V" line="1316"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeLines" desc="(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;)V" line="1341"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLines" desc="(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V" line="1373"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLines" desc="(Ljava/util/Collection;Ljava/lang/String;Ljava/io/Writer;)V" line="1404"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;)I" line="1440"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyLarge" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;)J" line="1465"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyLarge" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;[B)J" line="1486"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyLarge" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;JJ)J" line="1516"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyLarge" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;JJ[B)J" line="1541"><counter type="INSTRUCTION" missed="2" covered="66"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/Writer;)V" line="1582"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/Writer;Ljava/lang/String;)V" line="1607"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/Reader;Ljava/io/Writer;)I" line="1636"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyLarge" desc="(Ljava/io/Reader;Ljava/io/Writer;)J" line="1659"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyLarge" desc="(Ljava/io/Reader;Ljava/io/Writer;[C)J" line="1678"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyLarge" desc="(Ljava/io/Reader;Ljava/io/Writer;JJ)J" line="1708"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyLarge" desc="(Ljava/io/Reader;Ljava/io/Writer;JJ[C)J" line="1732"><counter type="INSTRUCTION" missed="2" covered="66"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/Reader;Ljava/io/OutputStream;)V" line="1776"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/Reader;Ljava/io/OutputStream;Ljava/lang/String;)V" line="1808"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contentEquals" desc="(Ljava/io/InputStream;Ljava/io/InputStream;)Z" line="1837"><counter type="INSTRUCTION" missed="1" covered="43"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contentEquals" desc="(Ljava/io/Reader;Ljava/io/Reader;)Z" line="1875"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contentEqualsIgnoreEOL" desc="(Ljava/io/Reader;Ljava/io/Reader;)Z" line="1907"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(Ljava/io/InputStream;J)J" line="1936"><counter type="INSTRUCTION" missed="12" covered="39"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(Ljava/io/Reader;J)J" line="1975"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipFully" desc="(Ljava/io/InputStream;J)V" line="2013"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skipFully" desc="(Ljava/io/Reader;J)V" line="2038"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/Reader;[CII)I" line="2060"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/Reader;[C)I" line="2088"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/io/InputStream;[BII)I" line="2106"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/InputStream;[B)I" line="2134"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFully" desc="(Ljava/io/Reader;[CII)V" line="2154"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFully" desc="(Ljava/io/Reader;[C)V" line="2175"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFully" desc="(Ljava/io/InputStream;[BII)V" line="2195"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFully" desc="(Ljava/io/InputStream;[B)V" line="2216"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="96"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="117" covered="1265"/><counter type="BRANCH" missed="22" covered="178"/><counter type="LINE" missed="32" covered="340"/><counter type="COMPLEXITY" missed="29" covered="157"/><counter type="METHOD" missed="12" covered="74"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/IOExceptionWithCause" sourcefilename="IOExceptionWithCause.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="64"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/HexDump" sourcefilename="HexDump.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dump" desc="([BJLjava/io/OutputStream;I)V" line="76"><counter type="INSTRUCTION" missed="0" covered="146"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dump" desc="(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;" line="140"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dump" desc="(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;" line="155"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="120"><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="297"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="2" covered="37"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/FileCleaningTracker" sourcefilename="FileCleaningTracker.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="track" desc="(Ljava/io/File;Ljava/lang/Object;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="track" desc="(Ljava/io/File;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="track" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="track" desc="(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V" line="121"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addTracker" desc="(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/commons/io/FileDeleteStrategy;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTrackCount" desc="()I" line="154"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeleteFailures" desc="()Ljava/util/List;" line="164"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitWhenFinished" desc="()V" line="190"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="119"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/TaggedIOException" sourcefilename="TaggedIOException.java"><method name="isTaggedWith" desc="(Ljava/lang/Throwable;Ljava/lang/Object;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwCauseIfTaggedWith" desc="(Ljava/lang/Throwable;Ljava/lang/Object;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/IOException;Ljava/io/Serializable;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTag" desc="()Ljava/io/Serializable;" line="121"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCause" desc="()Ljava/io/IOException;" line="132"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="37"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/CopyUtils" sourcefilename="CopyUtils.java"><method name="&lt;init&gt;" desc="()V" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="([BLjava/io/OutputStream;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="([BLjava/io/Writer;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="([BLjava/io/Writer;Ljava/lang/String;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/OutputStream;)I" line="194"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/Reader;Ljava/io/Writer;)I" line="219"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/Writer;)V" line="245"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/InputStream;Ljava/io/Writer;Ljava/lang/String;)V" line="264"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/io/Reader;Ljava/io/OutputStream;)V" line="284"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/lang/String;Ljava/io/OutputStream;)V" line="307"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/lang/String;Ljava/io/Writer;)V" line="327"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="132"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileExistsException.java"><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="12" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="4"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileUtils.java"><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="2"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="2"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="16" mb="0" cb="2"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="2"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="16" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="2"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="2"/><line nr="247" mi="0" ci="3" mb="0" cb="2"/><line nr="248" mi="0" ci="14" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="1" cb="1"/><line nr="251" mi="14" ci="0" mb="0" cb="0"/><line nr="254" mi="0" ci="14" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="2"/><line nr="308" mi="0" ci="3" mb="0" cb="2"/><line nr="309" mi="0" ci="14" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="1" cb="1"/><line nr="312" mi="14" ci="0" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="2"/><line nr="317" mi="0" ci="6" mb="0" cb="4"/><line nr="318" mi="0" ci="14" mb="0" cb="0"/><line nr="322" mi="0" ci="6" mb="0" cb="0"/><line nr="342" mi="0" ci="6" mb="0" cb="2"/><line nr="343" mi="0" ci="13" mb="0" cb="0"/><line nr="344" mi="0" ci="6" mb="0" cb="2"/><line nr="345" mi="0" ci="13" mb="0" cb="0"/><line nr="346" mi="0" ci="6" mb="0" cb="2"/><line nr="347" mi="0" ci="13" mb="0" cb="0"/><line nr="348" mi="0" ci="6" mb="0" cb="2"/><line nr="349" mi="0" ci="13" mb="0" cb="0"/><line nr="350" mi="0" ci="6" mb="0" cb="2"/><line nr="351" mi="0" ci="13" mb="0" cb="0"/><line nr="352" mi="0" ci="6" mb="0" cb="2"/><line nr="353" mi="0" ci="13" mb="0" cb="0"/><line nr="355" mi="0" ci="10" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="2"/><line nr="375" mi="0" ci="3" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="0" ci="2" mb="1" cb="1"/><line nr="380" mi="12" ci="0" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="7" ci="0" mb="0" cb="0"/><line nr="409" mi="0" ci="4" mb="0" cb="0"/><line nr="411" mi="0" ci="2" mb="1" cb="1"/><line nr="412" mi="0" ci="16" mb="0" cb="2"/><line nr="413" mi="0" ci="3" mb="0" cb="2"/><line nr="414" mi="0" ci="2" mb="0" cb="2"/><line nr="415" mi="0" ci="4" mb="0" cb="0"/><line nr="417" mi="0" ci="6" mb="0" cb="0"/><line nr="419" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="1" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="454" mi="0" ci="3" mb="0" cb="0"/><line nr="455" mi="0" ci="3" mb="0" cb="0"/><line nr="458" mi="0" ci="4" mb="0" cb="0"/><line nr="459" mi="0" ci="13" mb="0" cb="0"/><line nr="460" mi="0" ci="2" mb="0" cb="0"/><line nr="461" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="3" mb="1" cb="1"/><line nr="476" mi="5" ci="0" mb="0" cb="0"/><line nr="478" mi="0" ci="2" mb="0" cb="2"/><line nr="479" mi="0" ci="5" mb="0" cb="0"/><line nr="481" mi="0" ci="1" mb="0" cb="0"/><line nr="490" mi="0" ci="13" mb="0" cb="0"/><line nr="500" mi="0" ci="16" mb="0" cb="2"/><line nr="524" mi="0" ci="3" mb="0" cb="0"/><line nr="526" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="530" mi="0" ci="4" mb="0" cb="0"/><line nr="531" mi="0" ci="3" mb="1" cb="1"/><line nr="532" mi="0" ci="4" mb="0" cb="0"/><line nr="534" mi="0" ci="13" mb="0" cb="0"/><line nr="535" mi="0" ci="2" mb="0" cb="0"/><line nr="536" mi="0" ci="2" mb="0" cb="0"/><line nr="559" mi="0" ci="6" mb="0" cb="0"/><line nr="583" mi="0" ci="6" mb="0" cb="0"/><line nr="595" mi="0" ci="4" mb="0" cb="0"/><line nr="596" mi="0" ci="8" mb="0" cb="2"/><line nr="597" mi="0" ci="13" mb="0" cb="0"/><line nr="599" mi="0" ci="2" mb="0" cb="0"/><line nr="616" mi="0" ci="2" mb="0" cb="2"/><line nr="617" mi="0" ci="3" mb="0" cb="0"/><line nr="619" mi="0" ci="3" mb="0" cb="0"/><line nr="620" mi="0" ci="5" mb="0" cb="0"/><line nr="622" mi="0" ci="9" mb="0" cb="2"/><line nr="641" mi="0" ci="6" mb="0" cb="0"/><line nr="661" mi="0" ci="3" mb="0" cb="0"/><line nr="662" mi="0" ci="4" mb="1" cb="1"/><line nr="663" mi="2" ci="0" mb="0" cb="0"/><line nr="666" mi="0" ci="2" mb="0" cb="2"/><line nr="668" mi="0" ci="2" mb="0" cb="0"/><line nr="671" mi="0" ci="6" mb="1" cb="3"/><line nr="673" mi="0" ci="5" mb="0" cb="0"/><line nr="676" mi="0" ci="6" mb="0" cb="2"/><line nr="678" mi="0" ci="2" mb="0" cb="0"/><line nr="681" mi="0" ci="6" mb="0" cb="2"/><line nr="683" mi="0" ci="2" mb="0" cb="0"/><line nr="686" mi="0" ci="2" mb="0" cb="0"/><line nr="687" mi="0" ci="2" mb="0" cb="0"/><line nr="689" mi="0" ci="5" mb="0" cb="0"/><line nr="690" mi="0" ci="5" mb="0" cb="0"/><line nr="691" mi="0" ci="6" mb="0" cb="0"/><line nr="694" mi="0" ci="2" mb="0" cb="0"/><line nr="695" mi="0" ci="2" mb="0" cb="0"/><line nr="718" mi="0" ci="3" mb="0" cb="0"/><line nr="719" mi="0" ci="4" mb="1" cb="1"/><line nr="720" mi="2" ci="0" mb="0" cb="0"/><line nr="723" mi="0" ci="2" mb="0" cb="2"/><line nr="725" mi="0" ci="2" mb="0" cb="0"/><line nr="728" mi="0" ci="6" mb="1" cb="3"/><line nr="730" mi="0" ci="5" mb="0" cb="0"/><line nr="733" mi="0" ci="6" mb="0" cb="2"/><line nr="735" mi="0" ci="2" mb="0" cb="0"/><line nr="738" mi="0" ci="2" mb="0" cb="0"/><line nr="739" mi="0" ci="2" mb="0" cb="0"/><line nr="741" mi="0" ci="2" mb="1" cb="1"/><line nr="742" mi="0" ci="8" mb="0" cb="0"/><line nr="743" mi="0" ci="9" mb="0" cb="0"/><line nr="745" mi="9" ci="0" mb="0" cb="0"/><line nr="746" mi="9" ci="0" mb="0" cb="0"/><line nr="748" mi="0" ci="6" mb="0" cb="0"/><line nr="751" mi="0" ci="2" mb="0" cb="0"/><line nr="752" mi="0" ci="2" mb="0" cb="0"/><line nr="772" mi="0" ci="7" mb="0" cb="4"/><line nr="773" mi="0" ci="2" mb="0" cb="0"/><line nr="775" mi="0" ci="6" mb="0" cb="0"/><line nr="776" mi="0" ci="3" mb="0" cb="0"/><line nr="777" mi="0" ci="5" mb="0" cb="0"/><line nr="796" mi="0" ci="2" mb="0" cb="0"/><line nr="797" mi="0" ci="6" mb="0" cb="4"/><line nr="798" mi="0" ci="3" mb="0" cb="0"/><line nr="799" mi="0" ci="4" mb="0" cb="0"/><line nr="800" mi="0" ci="3" mb="0" cb="0"/><line nr="801" mi="0" ci="5" mb="0" cb="2"/><line nr="802" mi="0" ci="5" mb="0" cb="2"/><line nr="805" mi="0" ci="12" mb="0" cb="0"/><line nr="806" mi="0" ci="4" mb="0" cb="0"/><line nr="807" mi="0" ci="1" mb="0" cb="0"/><line nr="808" mi="0" ci="8" mb="0" cb="4"/><line nr="810" mi="0" ci="1" mb="0" cb="0"/><line nr="814" mi="0" ci="3" mb="0" cb="2"/><line nr="815" mi="0" ci="3" mb="0" cb="0"/><line nr="816" mi="0" ci="7" mb="0" cb="0"/><line nr="817" mi="0" ci="3" mb="0" cb="0"/><line nr="821" mi="0" ci="8" mb="0" cb="0"/><line nr="823" mi="0" ci="3" mb="0" cb="0"/><line nr="825" mi="0" ci="2" mb="0" cb="0"/><line nr="848" mi="0" ci="5" mb="1" cb="3"/><line nr="849" mi="0" ci="2" mb="0" cb="0"/><line nr="851" mi="0" ci="4" mb="0" cb="0"/><line nr="852" mi="0" ci="8" mb="0" cb="2"/><line nr="853" mi="0" ci="4" mb="0" cb="0"/><line nr="854" mi="0" ci="2" mb="0" cb="2"/><line nr="855" mi="0" ci="5" mb="0" cb="2"/><line nr="856" mi="0" ci="12" mb="0" cb="0"/><line nr="859" mi="0" ci="5" mb="0" cb="0"/><line nr="862" mi="0" ci="2" mb="0" cb="0"/><line nr="875" mi="0" ci="4" mb="0" cb="0"/><line nr="877" mi="0" ci="8" mb="0" cb="2"/><line nr="878" mi="0" ci="8" mb="0" cb="0"/><line nr="881" mi="0" ci="2" mb="0" cb="0"/><line nr="907" mi="0" ci="4" mb="0" cb="0"/><line nr="908" mi="0" ci="1" mb="0" cb="0"/><line nr="936" mi="0" ci="2" mb="1" cb="1"/><line nr="937" mi="5" ci="0" mb="0" cb="0"/><line nr="939" mi="0" ci="6" mb="2" cb="2"/><line nr="940" mi="14" ci="0" mb="0" cb="0"/><line nr="942" mi="0" ci="7" mb="0" cb="0"/><line nr="943" mi="0" ci="4" mb="0" cb="0"/><line nr="944" mi="0" ci="1" mb="0" cb="0"/><line nr="968" mi="0" ci="4" mb="0" cb="0"/><line nr="969" mi="0" ci="1" mb="0" cb="0"/><line nr="997" mi="0" ci="2" mb="1" cb="1"/><line nr="998" mi="5" ci="0" mb="0" cb="0"/><line nr="1000" mi="0" ci="2" mb="1" cb="1"/><line nr="1001" mi="5" ci="0" mb="0" cb="0"/><line nr="1003" mi="0" ci="3" mb="1" cb="1"/><line nr="1004" mi="14" ci="0" mb="0" cb="0"/><line nr="1006" mi="0" ci="3" mb="1" cb="1"/><line nr="1007" mi="14" ci="0" mb="0" cb="0"/><line nr="1009" mi="0" ci="6" mb="0" cb="2"/><line nr="1010" mi="0" ci="18" mb="0" cb="0"/><line nr="1012" mi="0" ci="3" mb="0" cb="0"/><line nr="1013" mi="0" ci="2" mb="1" cb="1"/><line nr="1014" mi="0" ci="6" mb="2" cb="2"/><line nr="1015" mi="14" ci="0" mb="0" cb="0"/><line nr="1018" mi="3" ci="3" mb="3" cb="1"/><line nr="1019" mi="14" ci="0" mb="0" cb="0"/><line nr="1021" mi="0" ci="4" mb="0" cb="0"/><line nr="1022" mi="0" ci="1" mb="0" cb="0"/><line nr="1042" mi="0" ci="5" mb="0" cb="0"/><line nr="1044" mi="0" ci="6" mb="0" cb="0"/><line nr="1046" mi="0" ci="2" mb="0" cb="0"/><line nr="1059" mi="3" ci="3" mb="3" cb="1"/><line nr="1060" mi="14" ci="0" mb="0" cb="0"/><line nr="1063" mi="0" ci="2" mb="0" cb="0"/><line nr="1064" mi="0" ci="2" mb="0" cb="0"/><line nr="1065" mi="0" ci="2" mb="0" cb="0"/><line nr="1066" mi="0" ci="2" mb="0" cb="0"/><line nr="1068" mi="0" ci="5" mb="0" cb="0"/><line nr="1069" mi="0" ci="5" mb="0" cb="0"/><line nr="1070" mi="0" ci="3" mb="0" cb="0"/><line nr="1071" mi="0" ci="3" mb="0" cb="0"/><line nr="1072" mi="0" ci="3" mb="0" cb="0"/><line nr="1073" mi="0" ci="2" mb="0" cb="0"/><line nr="1074" mi="0" ci="2" mb="0" cb="0"/><line nr="1075" mi="0" ci="4" mb="0" cb="2"/><line nr="1076" mi="2" ci="10" mb="1" cb="1"/><line nr="1077" mi="0" ci="9" mb="0" cb="0"/><line nr="1080" mi="0" ci="2" mb="0" cb="0"/><line nr="1081" mi="0" ci="2" mb="0" cb="0"/><line nr="1082" mi="0" ci="2" mb="0" cb="0"/><line nr="1083" mi="0" ci="2" mb="0" cb="0"/><line nr="1086" mi="0" ci="6" mb="1" cb="1"/><line nr="1087" mi="18" ci="0" mb="0" cb="0"/><line nr="1090" mi="0" ci="2" mb="0" cb="2"/><line nr="1091" mi="0" ci="5" mb="0" cb="0"/><line nr="1093" mi="0" ci="1" mb="0" cb="0"/><line nr="1120" mi="0" ci="2" mb="1" cb="1"/><line nr="1121" mi="5" ci="0" mb="0" cb="0"/><line nr="1123" mi="0" ci="6" mb="2" cb="2"/><line nr="1124" mi="14" ci="0" mb="0" cb="0"/><line nr="1126" mi="0" ci="2" mb="1" cb="1"/><line nr="1127" mi="5" ci="0" mb="0" cb="0"/><line nr="1129" mi="0" ci="6" mb="1" cb="3"/><line nr="1130" mi="14" ci="0" mb="0" cb="0"/><line nr="1132" mi="0" ci="9" mb="0" cb="0"/><line nr="1133" mi="0" ci="1" mb="0" cb="0"/><line nr="1160" mi="0" ci="4" mb="0" cb="0"/><line nr="1161" mi="0" ci="1" mb="0" cb="0"/><line nr="1191" mi="0" ci="5" mb="0" cb="0"/><line nr="1192" mi="0" ci="1" mb="0" cb="0"/><line nr="1240" mi="0" ci="5" mb="0" cb="0"/><line nr="1241" mi="0" ci="1" mb="0" cb="0"/><line nr="1291" mi="0" ci="2" mb="0" cb="2"/><line nr="1292" mi="0" ci="5" mb="0" cb="0"/><line nr="1294" mi="0" ci="2" mb="0" cb="2"/><line nr="1295" mi="0" ci="5" mb="0" cb="0"/><line nr="1297" mi="0" ci="3" mb="0" cb="2"/><line nr="1298" mi="0" ci="14" mb="0" cb="0"/><line nr="1300" mi="0" ci="3" mb="0" cb="2"/><line nr="1301" mi="0" ci="14" mb="0" cb="0"/><line nr="1303" mi="0" ci="6" mb="0" cb="2"/><line nr="1304" mi="0" ci="18" mb="0" cb="0"/><line nr="1308" mi="0" ci="2" mb="0" cb="0"/><line nr="1309" mi="0" ci="6" mb="0" cb="2"/><line nr="1310" mi="3" ci="6" mb="1" cb="1"/><line nr="1311" mi="0" ci="5" mb="1" cb="3"/><line nr="1312" mi="0" ci="6" mb="0" cb="0"/><line nr="1313" mi="0" ci="16" mb="0" cb="2"/><line nr="1314" mi="0" ci="7" mb="0" cb="0"/><line nr="1315" mi="0" ci="5" mb="0" cb="0"/><line nr="1319" mi="0" ci="6" mb="0" cb="0"/><line nr="1320" mi="0" ci="1" mb="0" cb="0"/><line nr="1336" mi="0" ci="9" mb="0" cb="2"/><line nr="1337" mi="0" ci="2" mb="1" cb="1"/><line nr="1338" mi="12" ci="0" mb="0" cb="0"/><line nr="1340" mi="0" ci="3" mb="0" cb="2"/><line nr="1341" mi="0" ci="3" mb="0" cb="2"/><line nr="1342" mi="0" ci="14" mb="0" cb="0"/><line nr="1345" mi="3" ci="3" mb="3" cb="1"/><line nr="1346" mi="14" ci="0" mb="0" cb="0"/><line nr="1349" mi="0" ci="3" mb="1" cb="1"/><line nr="1350" mi="14" ci="0" mb="0" cb="0"/><line nr="1352" mi="0" ci="16" mb="0" cb="2"/><line nr="1353" mi="0" ci="7" mb="0" cb="0"/><line nr="1354" mi="0" ci="7" mb="0" cb="4"/><line nr="1355" mi="0" ci="3" mb="0" cb="2"/><line nr="1356" mi="0" ci="7" mb="0" cb="0"/><line nr="1358" mi="0" ci="4" mb="0" cb="0"/><line nr="1364" mi="0" ci="2" mb="0" cb="2"/><line nr="1365" mi="0" ci="5" mb="0" cb="0"/><line nr="1367" mi="0" ci="1" mb="0" cb="0"/><line nr="1390" mi="0" ci="3" mb="0" cb="0"/><line nr="1391" mi="0" ci="3" mb="0" cb="0"/><line nr="1392" mi="0" ci="1" mb="0" cb="0"/><line nr="1416" mi="0" ci="3" mb="0" cb="0"/><line nr="1417" mi="0" ci="3" mb="0" cb="0"/><line nr="1418" mi="0" ci="3" mb="0" cb="0"/><line nr="1419" mi="0" ci="3" mb="0" cb="0"/><line nr="1420" mi="0" ci="3" mb="0" cb="0"/><line nr="1421" mi="0" ci="1" mb="0" cb="0"/><line nr="1440" mi="0" ci="3" mb="0" cb="0"/><line nr="1442" mi="0" ci="4" mb="0" cb="0"/><line nr="1443" mi="0" ci="2" mb="0" cb="0"/><line nr="1445" mi="0" ci="2" mb="0" cb="0"/><line nr="1448" mi="0" ci="2" mb="0" cb="0"/><line nr="1450" mi="0" ci="1" mb="0" cb="0"/><line nr="1460" mi="0" ci="3" mb="0" cb="2"/><line nr="1461" mi="0" ci="1" mb="0" cb="0"/><line nr="1464" mi="0" ci="3" mb="1" cb="1"/><line nr="1465" mi="0" ci="2" mb="0" cb="0"/><line nr="1468" mi="0" ci="3" mb="1" cb="1"/><line nr="1469" mi="11" ci="0" mb="0" cb="0"/><line nr="1471" mi="5" ci="0" mb="0" cb="0"/><line nr="1473" mi="0" ci="1" mb="0" cb="0"/><line nr="1491" mi="0" ci="2" mb="0" cb="2"/><line nr="1492" mi="0" ci="2" mb="0" cb="0"/><line nr="1495" mi="0" ci="3" mb="0" cb="2"/><line nr="1496" mi="0" ci="2" mb="0" cb="0"/><line nr="1498" mi="1" ci="0" mb="0" cb="0"/><line nr="1499" mi="0" ci="1" mb="0" cb="0"/><line nr="1502" mi="0" ci="3" mb="0" cb="0"/><line nr="1503" mi="1" ci="0" mb="0" cb="0"/><line nr="1504" mi="2" ci="0" mb="0" cb="0"/><line nr="1535" mi="0" ci="2" mb="1" cb="1"/><line nr="1536" mi="5" ci="0" mb="0" cb="0"/><line nr="1539" mi="0" ci="3" mb="0" cb="2"/><line nr="1540" mi="0" ci="12" mb="0" cb="0"/><line nr="1543" mi="0" ci="2" mb="0" cb="2"/><line nr="1544" mi="0" ci="2" mb="0" cb="0"/><line nr="1547" mi="0" ci="6" mb="1" cb="3"/><line nr="1548" mi="0" ci="2" mb="0" cb="0"/><line nr="1552" mi="0" ci="3" mb="0" cb="0"/><line nr="1553" mi="0" ci="3" mb="0" cb="0"/><line nr="1555" mi="0" ci="4" mb="0" cb="0"/><line nr="1565" mi="0" ci="3" mb="1" cb="1"/><line nr="1566" mi="9" ci="0" mb="0" cb="0"/><line nr="1567" mi="5" ci="0" mb="0" cb="0"/><line nr="1570" mi="0" ci="3" mb="1" cb="1"/><line nr="1571" mi="9" ci="0" mb="0" cb="0"/><line nr="1572" mi="5" ci="0" mb="0" cb="0"/><line nr="1575" mi="0" ci="3" mb="0" cb="0"/><line nr="1576" mi="0" ci="2" mb="1" cb="1"/><line nr="1577" mi="12" ci="0" mb="0" cb="0"/><line nr="1580" mi="0" ci="2" mb="0" cb="0"/><line nr="1581" mi="0" ci="16" mb="0" cb="2"/><line nr="1583" mi="0" ci="2" mb="0" cb="0"/><line nr="1584" mi="1" ci="0" mb="0" cb="0"/><line nr="1585" mi="2" ci="0" mb="0" cb="0"/><line nr="1586" mi="0" ci="1" mb="0" cb="0"/><line nr="1589" mi="0" ci="3" mb="1" cb="1"/><line nr="1590" mi="2" ci="0" mb="0" cb="0"/><line nr="1592" mi="0" ci="1" mb="0" cb="0"/><line nr="1607" mi="0" ci="2" mb="0" cb="0"/><line nr="1608" mi="0" ci="2" mb="0" cb="0"/><line nr="1609" mi="0" ci="3" mb="1" cb="1"/><line nr="1610" mi="0" ci="4" mb="0" cb="2"/><line nr="1611" mi="0" ci="2" mb="0" cb="0"/><line nr="1612" mi="0" ci="4" mb="0" cb="2"/><line nr="1613" mi="0" ci="2" mb="0" cb="0"/><line nr="1617" mi="0" ci="2" mb="0" cb="0"/><line nr="1618" mi="1" ci="0" mb="0" cb="0"/><line nr="1620" mi="1" ci="0" mb="0" cb="0"/><line nr="1621" mi="1" ci="0" mb="0" cb="0"/><line nr="1622" mi="1" ci="1" mb="0" cb="0"/><line nr="1624" mi="2" ci="0" mb="0" cb="0"/><line nr="1639" mi="0" ci="2" mb="0" cb="0"/><line nr="1641" mi="0" ci="3" mb="0" cb="0"/><line nr="1642" mi="0" ci="6" mb="0" cb="0"/><line nr="1644" mi="0" ci="2" mb="0" cb="0"/><line nr="1659" mi="0" ci="4" mb="0" cb="0"/><line nr="1672" mi="0" ci="2" mb="0" cb="0"/><line nr="1674" mi="0" ci="3" mb="0" cb="0"/><line nr="1675" mi="0" ci="7" mb="0" cb="0"/><line nr="1677" mi="0" ci="2" mb="0" cb="0"/><line nr="1693" mi="0" ci="2" mb="0" cb="0"/><line nr="1695" mi="0" ci="3" mb="0" cb="0"/><line nr="1696" mi="0" ci="6" mb="0" cb="0"/><line nr="1698" mi="0" ci="2" mb="0" cb="0"/><line nr="1712" mi="0" ci="4" mb="0" cb="0"/><line nr="1747" mi="0" ci="2" mb="0" cb="0"/><line nr="1749" mi="0" ci="3" mb="0" cb="0"/><line nr="1750" mi="0" ci="4" mb="0" cb="0"/><line nr="1751" mi="0" ci="1" mb="0" cb="0"/><line nr="1752" mi="0" ci="2" mb="0" cb="0"/><line nr="1753" mi="0" ci="2" mb="0" cb="0"/><line nr="1754" mi="1" ci="0" mb="0" cb="0"/><line nr="1755" mi="2" ci="0" mb="0" cb="0"/><line nr="1756" mi="2" ci="0" mb="0" cb="0"/><line nr="1770" mi="0" ci="4" mb="0" cb="0"/><line nr="1787" mi="0" ci="5" mb="0" cb="0"/><line nr="1788" mi="0" ci="1" mb="0" cb="0"/><line nr="1803" mi="0" ci="2" mb="0" cb="0"/><line nr="1805" mi="0" ci="4" mb="0" cb="0"/><line nr="1806" mi="0" ci="4" mb="0" cb="0"/><line nr="1807" mi="0" ci="2" mb="0" cb="0"/><line nr="1809" mi="0" ci="2" mb="0" cb="0"/><line nr="1811" mi="0" ci="1" mb="0" cb="0"/><line nr="1821" mi="0" ci="5" mb="0" cb="0"/><line nr="1822" mi="0" ci="1" mb="0" cb="0"/><line nr="1835" mi="0" ci="5" mb="0" cb="0"/><line nr="1836" mi="0" ci="1" mb="0" cb="0"/><line nr="1847" mi="0" ci="5" mb="0" cb="0"/><line nr="1848" mi="0" ci="1" mb="0" cb="0"/><line nr="1861" mi="0" ci="5" mb="0" cb="0"/><line nr="1862" mi="0" ci="1" mb="0" cb="0"/><line nr="1875" mi="0" ci="5" mb="0" cb="0"/><line nr="1876" mi="0" ci="1" mb="0" cb="0"/><line nr="1891" mi="2" ci="5" mb="1" cb="1"/><line nr="1892" mi="0" ci="5" mb="0" cb="0"/><line nr="1893" mi="0" ci="1" mb="0" cb="0"/><line nr="1907" mi="0" ci="4" mb="0" cb="0"/><line nr="1908" mi="0" ci="1" mb="0" cb="0"/><line nr="1921" mi="0" ci="2" mb="0" cb="0"/><line nr="1923" mi="0" ci="4" mb="0" cb="0"/><line nr="1924" mi="0" ci="3" mb="0" cb="0"/><line nr="1925" mi="0" ci="2" mb="0" cb="0"/><line nr="1927" mi="0" ci="2" mb="0" cb="0"/><line nr="1929" mi="0" ci="1" mb="0" cb="0"/><line nr="1947" mi="0" ci="6" mb="0" cb="0"/><line nr="1948" mi="0" ci="1" mb="0" cb="0"/><line nr="1965" mi="0" ci="6" mb="0" cb="0"/><line nr="1966" mi="0" ci="1" mb="0" cb="0"/><line nr="1979" mi="0" ci="6" mb="0" cb="0"/><line nr="1980" mi="0" ci="1" mb="0" cb="0"/><line nr="1995" mi="0" ci="6" mb="0" cb="0"/><line nr="1996" mi="0" ci="1" mb="0" cb="0"/><line nr="2016" mi="0" ci="6" mb="0" cb="0"/><line nr="2017" mi="0" ci="1" mb="0" cb="0"/><line nr="2036" mi="0" ci="2" mb="0" cb="0"/><line nr="2038" mi="0" ci="4" mb="0" cb="0"/><line nr="2039" mi="0" ci="5" mb="0" cb="0"/><line nr="2040" mi="0" ci="2" mb="0" cb="0"/><line nr="2042" mi="0" ci="2" mb="0" cb="0"/><line nr="2044" mi="0" ci="1" mb="0" cb="0"/><line nr="2058" mi="6" ci="0" mb="0" cb="0"/><line nr="2059" mi="1" ci="0" mb="0" cb="0"/><line nr="2076" mi="0" ci="6" mb="0" cb="0"/><line nr="2077" mi="0" ci="1" mb="0" cb="0"/><line nr="2096" mi="0" ci="3" mb="0" cb="2"/><line nr="2097" mi="0" ci="3" mb="0" cb="0"/><line nr="2099" mi="0" ci="3" mb="0" cb="0"/><line nr="2100" mi="0" ci="3" mb="0" cb="2"/><line nr="2101" mi="0" ci="2" mb="1" cb="1"/><line nr="2102" mi="0" ci="12" mb="0" cb="0"/><line nr="2104" mi="9" ci="0" mb="0" cb="0"/><line nr="2106" mi="5" ci="0" mb="0" cb="0"/><line nr="2109" mi="0" ci="1" mb="0" cb="0"/><line nr="2120" mi="0" ci="3" mb="0" cb="2"/><line nr="2121" mi="0" ci="3" mb="0" cb="0"/><line nr="2123" mi="0" ci="2" mb="0" cb="0"/><line nr="2125" mi="0" ci="1" mb="0" cb="0"/><line nr="2135" mi="0" ci="3" mb="1" cb="1"/><line nr="2136" mi="1" ci="0" mb="0" cb="0"/><line nr="2139" mi="0" ci="2" mb="0" cb="0"/><line nr="2140" mi="0" ci="3" mb="1" cb="1"/><line nr="2141" mi="0" ci="2" mb="0" cb="0"/><line nr="2143" mi="0" ci="1" mb="0" cb="0"/><line nr="2153" mi="0" ci="3" mb="1" cb="1"/><line nr="2154" mi="9" ci="0" mb="0" cb="0"/><line nr="2155" mi="5" ci="0" mb="0" cb="0"/><line nr="2158" mi="0" ci="3" mb="1" cb="1"/><line nr="2159" mi="9" ci="0" mb="0" cb="0"/><line nr="2160" mi="5" ci="0" mb="0" cb="0"/><line nr="2163" mi="0" ci="3" mb="0" cb="0"/><line nr="2164" mi="0" ci="2" mb="1" cb="1"/><line nr="2165" mi="12" ci="0" mb="0" cb="0"/><line nr="2168" mi="0" ci="2" mb="0" cb="0"/><line nr="2169" mi="0" ci="16" mb="0" cb="2"/><line nr="2171" mi="0" ci="2" mb="0" cb="0"/><line nr="2172" mi="1" ci="0" mb="0" cb="0"/><line nr="2173" mi="2" ci="0" mb="0" cb="0"/><line nr="2174" mi="0" ci="1" mb="0" cb="0"/><line nr="2177" mi="0" ci="3" mb="1" cb="1"/><line nr="2178" mi="2" ci="0" mb="0" cb="0"/><line nr="2180" mi="0" ci="1" mb="0" cb="0"/><line nr="2194" mi="0" ci="3" mb="0" cb="2"/><line nr="2195" mi="0" ci="3" mb="0" cb="2"/><line nr="2196" mi="0" ci="11" mb="0" cb="0"/><line nr="2201" mi="0" ci="5" mb="0" cb="0"/><line nr="2204" mi="0" ci="3" mb="1" cb="1"/><line nr="2207" mi="3" ci="0" mb="2" cb="0"/><line nr="2209" mi="9" ci="0" mb="0" cb="0"/><line nr="2211" mi="5" ci="0" mb="0" cb="0"/><line nr="2215" mi="0" ci="1" mb="0" cb="0"/><line nr="2238" mi="0" ci="3" mb="0" cb="2"/><line nr="2239" mi="0" ci="9" mb="0" cb="0"/><line nr="2240" mi="0" ci="5" mb="0" cb="0"/><line nr="2243" mi="0" ci="3" mb="0" cb="2"/><line nr="2244" mi="0" ci="3" mb="0" cb="0"/><line nr="2246" mi="0" ci="3" mb="0" cb="0"/><line nr="2259" mi="0" ci="3" mb="0" cb="2"/><line nr="2260" mi="0" ci="9" mb="0" cb="0"/><line nr="2261" mi="0" ci="5" mb="0" cb="0"/><line nr="2264" mi="0" ci="3" mb="0" cb="2"/><line nr="2265" mi="0" ci="9" mb="0" cb="0"/><line nr="2266" mi="0" ci="5" mb="0" cb="0"/><line nr="2269" mi="0" ci="2" mb="0" cb="0"/><line nr="2271" mi="0" ci="3" mb="0" cb="0"/><line nr="2272" mi="0" ci="2" mb="1" cb="1"/><line nr="2273" mi="2" ci="0" mb="0" cb="0"/><line nr="2275" mi="0" ci="16" mb="0" cb="2"/><line nr="2276" mi="0" ci="5" mb="0" cb="0"/><line nr="2279" mi="0" ci="2" mb="0" cb="0"/><line nr="2297" mi="0" ci="2" mb="0" cb="2"/><line nr="2298" mi="0" ci="5" mb="0" cb="0"/><line nr="2300" mi="0" ci="3" mb="0" cb="2"/><line nr="2301" mi="0" ci="14" mb="0" cb="0"/><line nr="2304" mi="0" ci="5" mb="0" cb="0"/><line nr="2320" mi="0" ci="2" mb="0" cb="2"/><line nr="2321" mi="0" ci="5" mb="0" cb="0"/><line nr="2323" mi="0" ci="5" mb="0" cb="0"/><line nr="2339" mi="0" ci="2" mb="0" cb="2"/><line nr="2340" mi="0" ci="5" mb="0" cb="0"/><line nr="2342" mi="0" ci="3" mb="0" cb="2"/><line nr="2343" mi="0" ci="2" mb="0" cb="0"/><line nr="2345" mi="0" ci="9" mb="0" cb="2"/><line nr="2364" mi="0" ci="2" mb="0" cb="2"/><line nr="2365" mi="0" ci="5" mb="0" cb="0"/><line nr="2367" mi="0" ci="3" mb="0" cb="2"/><line nr="2368" mi="0" ci="14" mb="0" cb="0"/><line nr="2371" mi="0" ci="5" mb="0" cb="0"/><line nr="2387" mi="0" ci="2" mb="0" cb="2"/><line nr="2388" mi="0" ci="5" mb="0" cb="0"/><line nr="2390" mi="0" ci="5" mb="0" cb="0"/><line nr="2406" mi="0" ci="2" mb="0" cb="2"/><line nr="2407" mi="0" ci="5" mb="0" cb="0"/><line nr="2409" mi="0" ci="3" mb="0" cb="2"/><line nr="2410" mi="0" ci="2" mb="0" cb="0"/><line nr="2412" mi="0" ci="9" mb="0" cb="2"/><line nr="2428" mi="0" ci="4" mb="0" cb="0"/><line nr="2429" mi="0" ci="4" mb="0" cb="0"/><line nr="2430" mi="0" ci="3" mb="0" cb="0"/><line nr="2451" mi="0" ci="3" mb="0" cb="2"/><line nr="2452" mi="0" ci="5" mb="0" cb="0"/><line nr="2454" mi="0" ci="2" mb="0" cb="0"/><line nr="2456" mi="0" ci="9" mb="0" cb="0"/><line nr="2457" mi="0" ci="6" mb="0" cb="0"/><line nr="2459" mi="0" ci="2" mb="0" cb="0"/><line nr="2461" mi="0" ci="2" mb="0" cb="0"/><line nr="2478" mi="0" ci="2" mb="0" cb="2"/><line nr="2479" mi="0" ci="5" mb="0" cb="0"/><line nr="2481" mi="0" ci="2" mb="0" cb="2"/><line nr="2482" mi="0" ci="5" mb="0" cb="0"/><line nr="2484" mi="0" ci="3" mb="0" cb="2"/><line nr="2485" mi="0" ci="14" mb="0" cb="0"/><line nr="2487" mi="0" ci="3" mb="0" cb="2"/><line nr="2488" mi="0" ci="14" mb="0" cb="0"/><line nr="2490" mi="0" ci="3" mb="0" cb="2"/><line nr="2491" mi="0" ci="14" mb="0" cb="0"/><line nr="2493" mi="0" ci="4" mb="0" cb="0"/><line nr="2494" mi="0" ci="2" mb="0" cb="2"/><line nr="2495" mi="0" ci="6" mb="0" cb="2"/><line nr="2496" mi="0" ci="16" mb="0" cb="0"/><line nr="2498" mi="0" ci="3" mb="0" cb="0"/><line nr="2499" mi="0" ci="2" mb="0" cb="0"/><line nr="2500" mi="0" ci="3" mb="1" cb="1"/><line nr="2501" mi="18" ci="0" mb="0" cb="0"/><line nr="2505" mi="0" ci="1" mb="0" cb="0"/><line nr="2521" mi="0" ci="2" mb="0" cb="2"/><line nr="2522" mi="0" ci="5" mb="0" cb="0"/><line nr="2524" mi="0" ci="2" mb="0" cb="2"/><line nr="2525" mi="0" ci="5" mb="0" cb="0"/><line nr="2527" mi="0" ci="5" mb="0" cb="4"/><line nr="2528" mi="0" ci="3" mb="0" cb="0"/><line nr="2530" mi="0" ci="3" mb="0" cb="2"/><line nr="2531" mi="0" ci="18" mb="0" cb="0"/><line nr="2534" mi="0" ci="3" mb="0" cb="2"/><line nr="2535" mi="0" ci="14" mb="0" cb="0"/><line nr="2537" mi="0" ci="8" mb="0" cb="0"/><line nr="2539" mi="0" ci="1" mb="0" cb="0"/><line nr="2555" mi="0" ci="2" mb="0" cb="2"/><line nr="2556" mi="0" ci="5" mb="0" cb="0"/><line nr="2558" mi="0" ci="2" mb="0" cb="2"/><line nr="2559" mi="0" ci="5" mb="0" cb="0"/><line nr="2561" mi="0" ci="3" mb="0" cb="2"/><line nr="2562" mi="0" ci="14" mb="0" cb="0"/><line nr="2564" mi="0" ci="3" mb="0" cb="2"/><line nr="2565" mi="0" ci="14" mb="0" cb="0"/><line nr="2567" mi="0" ci="3" mb="0" cb="2"/><line nr="2568" mi="0" ci="14" mb="0" cb="0"/><line nr="2570" mi="0" ci="3" mb="1" cb="1"/><line nr="2571" mi="14" ci="0" mb="0" cb="0"/><line nr="2573" mi="0" ci="4" mb="0" cb="0"/><line nr="2574" mi="0" ci="2" mb="0" cb="2"/><line nr="2575" mi="0" ci="3" mb="0" cb="0"/><line nr="2576" mi="0" ci="3" mb="0" cb="2"/><line nr="2577" mi="0" ci="3" mb="0" cb="0"/><line nr="2578" mi="0" ci="18" mb="0" cb="0"/><line nr="2582" mi="0" ci="1" mb="0" cb="0"/><line nr="2598" mi="0" ci="2" mb="0" cb="2"/><line nr="2599" mi="0" ci="5" mb="0" cb="0"/><line nr="2601" mi="0" ci="2" mb="0" cb="2"/><line nr="2602" mi="0" ci="5" mb="0" cb="0"/><line nr="2604" mi="0" ci="5" mb="0" cb="4"/><line nr="2605" mi="0" ci="3" mb="0" cb="0"/><line nr="2607" mi="0" ci="3" mb="0" cb="2"/><line nr="2608" mi="0" ci="18" mb="0" cb="0"/><line nr="2611" mi="0" ci="3" mb="0" cb="2"/><line nr="2612" mi="0" ci="14" mb="0" cb="0"/><line nr="2614" mi="0" ci="8" mb="0" cb="0"/><line nr="2615" mi="0" ci="1" mb="0" cb="0"/><line nr="2633" mi="0" ci="2" mb="1" cb="1"/><line nr="2634" mi="5" ci="0" mb="0" cb="0"/><line nr="2636" mi="0" ci="2" mb="1" cb="1"/><line nr="2637" mi="5" ci="0" mb="0" cb="0"/><line nr="2639" mi="0" ci="3" mb="0" cb="2"/><line nr="2640" mi="0" ci="14" mb="0" cb="0"/><line nr="2642" mi="0" ci="3" mb="0" cb="2"/><line nr="2643" mi="0" ci="5" mb="0" cb="0"/><line nr="2645" mi="0" ci="4" mb="0" cb="0"/><line nr="2647" mi="0" ci="1" mb="0" cb="0"/><line nr="2664" mi="0" ci="2" mb="1" cb="1"/><line nr="2665" mi="5" ci="0" mb="0" cb="0"/><line nr="2667" mi="0" ci="2" mb="1" cb="1"/><line nr="2668" mi="0" ci="2" mb="0" cb="0"/><line nr="2670" mi="2" ci="0" mb="0" cb="0"/><line nr="2671" mi="3" ci="0" mb="2" cb="0"/><line nr="2672" mi="3" ci="0" mb="0" cb="0"/><line nr="2674" mi="4" ci="0" mb="0" cb="0"/><line nr="2675" mi="7" ci="0" mb="0" cb="0"/><line nr="2678" mi="6" ci="0" mb="2" cb="0"/><line nr="2679" mi="2" ci="0" mb="0" cb="0"/><line nr="2681" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="531" covered="2423"/><counter type="BRANCH" missed="73" covered="321"/><counter type="LINE" missed="79" covered="550"/><counter type="COMPLEXITY" missed="70" covered="224"/><counter type="METHOD" missed="3" covered="94"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TaggedIOException.java"><line nr="65" mi="0" ci="10" mb="1" cb="3"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="94" mi="0" ci="4" mb="0" cb="2"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="37"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HexDump.java"><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="4"/><line nr="77" mi="0" ci="17" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="2"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="2"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="2"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="2"/><line nr="103" mi="0" ci="14" mb="0" cb="4"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="67" mb="0" cb="0"/><line nr="127" mi="0" ci="36" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="2"/><line nr="141" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="2"/><line nr="156" mi="0" ci="14" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="297"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="2" covered="37"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EndianUtils.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="17" mb="0" cb="0"/><line nr="66" mi="0" ci="32" mb="0" cb="0"/><line nr="79" mi="0" ci="64" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="21" mb="0" cb="0"/><line nr="143" mi="0" ci="20" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="0" cb="0"/><line nr="156" mi="0" ci="11" mb="0" cb="0"/><line nr="157" mi="0" ci="11" mb="0" cb="0"/><line nr="158" mi="0" ci="11" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="40" mb="0" cb="0"/><line nr="184" mi="0" ci="31" mb="0" cb="0"/><line nr="188" mi="0" ci="9" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="201" mi="0" ci="12" mb="0" cb="0"/><line nr="202" mi="0" ci="12" mb="0" cb="0"/><line nr="203" mi="0" ci="12" mb="0" cb="0"/><line nr="204" mi="0" ci="12" mb="0" cb="0"/><line nr="205" mi="0" ci="12" mb="0" cb="0"/><line nr="206" mi="0" ci="12" mb="0" cb="0"/><line nr="207" mi="0" ci="12" mb="0" cb="0"/><line nr="208" mi="0" ci="12" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="41" mb="0" cb="0"/><line nr="224" mi="0" ci="41" mb="0" cb="0"/><line nr="229" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="273" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="8" mb="0" cb="0"/><line nr="287" mi="0" ci="8" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="8" mb="0" cb="0"/><line nr="301" mi="0" ci="7" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="12" mb="0" cb="0"/><line nr="331" mi="0" ci="8" mb="0" cb="0"/><line nr="332" mi="0" ci="8" mb="0" cb="0"/><line nr="333" mi="0" ci="8" mb="0" cb="0"/><line nr="334" mi="0" ci="8" mb="0" cb="0"/><line nr="335" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="24" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="3" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="373" mi="0" ci="19" mb="0" cb="0"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="8" mb="0" cb="0"/><line nr="392" mi="0" ci="9" mb="0" cb="0"/><line nr="393" mi="0" ci="9" mb="0" cb="0"/><line nr="394" mi="0" ci="9" mb="0" cb="0"/><line nr="395" mi="0" ci="9" mb="0" cb="0"/><line nr="396" mi="0" ci="9" mb="0" cb="0"/><line nr="397" mi="0" ci="9" mb="0" cb="0"/><line nr="398" mi="0" ci="9" mb="0" cb="0"/><line nr="399" mi="0" ci="9" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="0" ci="7" mb="0" cb="2"/><line nr="414" mi="0" ci="6" mb="0" cb="0"/><line nr="416" mi="0" ci="4" mb="0" cb="0"/><line nr="429" mi="0" ci="4" mb="0" cb="0"/><line nr="430" mi="0" ci="1" mb="0" cb="0"/><line nr="442" mi="0" ci="4" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="1" mb="0" cb="0"/><line nr="468" mi="0" ci="4" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="0"/><line nr="482" mi="0" ci="3" mb="0" cb="2"/><line nr="483" mi="0" ci="5" mb="0" cb="0"/><line nr="486" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="819"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="87"/><counter type="COMPLEXITY" missed="0" covered="33"/><counter type="METHOD" missed="0" covered="31"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IOUtils.java"><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="2"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="2"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="2"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="1" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="0" ci="2" mb="0" cb="2"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="385" mi="0" ci="1" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="389" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="426" mi="0" ci="11" mb="0" cb="2"/><line nr="443" mi="0" ci="4" mb="0" cb="0"/><line nr="444" mi="0" ci="4" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="466" mi="0" ci="4" mb="0" cb="2"/><line nr="467" mi="0" ci="12" mb="0" cb="0"/><line nr="470" mi="0" ci="5" mb="0" cb="0"/><line nr="486" mi="0" ci="2" mb="0" cb="2"/><line nr="487" mi="0" ci="12" mb="0" cb="0"/><line nr="490" mi="0" ci="2" mb="0" cb="2"/><line nr="491" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="0" ci="3" mb="0" cb="0"/><line nr="495" mi="0" ci="2" mb="0" cb="0"/><line nr="498" mi="0" ci="14" mb="0" cb="4"/><line nr="499" mi="0" ci="5" mb="0" cb="0"/><line nr="502" mi="0" ci="3" mb="0" cb="2"/><line nr="503" mi="0" ci="16" mb="0" cb="0"/><line nr="506" mi="0" ci="2" mb="0" cb="0"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="523" mi="3" ci="0" mb="0" cb="0"/><line nr="524" mi="3" ci="0" mb="0" cb="0"/><line nr="546" mi="4" ci="0" mb="0" cb="0"/><line nr="547" mi="4" ci="0" mb="0" cb="0"/><line nr="548" mi="3" ci="0" mb="0" cb="0"/><line nr="565" mi="0" ci="3" mb="0" cb="0"/><line nr="584" mi="0" ci="4" mb="0" cb="0"/><line nr="585" mi="0" ci="3" mb="0" cb="0"/><line nr="586" mi="0" ci="3" mb="0" cb="0"/><line nr="608" mi="0" ci="4" mb="0" cb="0"/><line nr="609" mi="0" ci="4" mb="0" cb="0"/><line nr="610" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="0" ci="4" mb="0" cb="0"/><line nr="627" mi="0" ci="4" mb="0" cb="0"/><line nr="628" mi="0" ci="3" mb="0" cb="0"/><line nr="646" mi="0" ci="4" mb="0" cb="0"/><line nr="667" mi="0" ci="4" mb="0" cb="0"/><line nr="668" mi="0" ci="4" mb="0" cb="0"/><line nr="669" mi="0" ci="3" mb="0" cb="0"/><line nr="684" mi="0" ci="4" mb="0" cb="0"/><line nr="685" mi="0" ci="4" mb="0" cb="0"/><line nr="686" mi="0" ci="3" mb="0" cb="0"/><line nr="699" mi="0" ci="4" mb="0" cb="0"/><line nr="714" mi="0" ci="5" mb="0" cb="0"/><line nr="727" mi="0" ci="4" mb="0" cb="0"/><line nr="742" mi="0" ci="3" mb="0" cb="0"/><line nr="744" mi="0" ci="6" mb="0" cb="0"/><line nr="746" mi="0" ci="2" mb="0" cb="0"/><line nr="762" mi="0" ci="5" mb="0" cb="0"/><line nr="782" mi="2" ci="0" mb="2" cb="0"/><line nr="783" mi="5" ci="0" mb="0" cb="0"/><line nr="785" mi="6" ci="0" mb="0" cb="0"/><line nr="805" mi="0" ci="5" mb="0" cb="0"/><line nr="806" mi="0" ci="3" mb="0" cb="0"/><line nr="827" mi="0" ci="2" mb="0" cb="2"/><line nr="828" mi="0" ci="3" mb="0" cb="0"/><line nr="830" mi="0" ci="6" mb="0" cb="0"/><line nr="831" mi="0" ci="3" mb="0" cb="0"/><line nr="849" mi="0" ci="3" mb="0" cb="0"/><line nr="850" mi="0" ci="4" mb="0" cb="0"/><line nr="851" mi="0" ci="3" mb="0" cb="0"/><line nr="852" mi="0" ci="2" mb="0" cb="2"/><line nr="853" mi="0" ci="4" mb="0" cb="0"/><line nr="854" mi="0" ci="4" mb="0" cb="0"/><line nr="856" mi="0" ci="2" mb="0" cb="0"/><line nr="889" mi="5" ci="0" mb="0" cb="0"/><line nr="924" mi="0" ci="2" mb="0" cb="0"/><line nr="925" mi="0" ci="2" mb="0" cb="2"/><line nr="926" mi="0" ci="6" mb="0" cb="0"/><line nr="928" mi="0" ci="6" mb="0" cb="0"/><line nr="930" mi="0" ci="5" mb="0" cb="0"/><line nr="943" mi="0" ci="4" mb="0" cb="0"/><line nr="960" mi="0" ci="5" mb="0" cb="0"/><line nr="973" mi="0" ci="3" mb="0" cb="0"/><line nr="974" mi="0" ci="5" mb="0" cb="0"/><line nr="991" mi="0" ci="9" mb="0" cb="2"/><line nr="992" mi="0" ci="5" mb="0" cb="0"/><line nr="1009" mi="0" ci="2" mb="0" cb="2"/><line nr="1010" mi="0" ci="3" mb="0" cb="0"/><line nr="1012" mi="0" ci="1" mb="0" cb="0"/><line nr="1028" mi="0" ci="2" mb="0" cb="2"/><line nr="1029" mi="0" ci="6" mb="0" cb="0"/><line nr="1031" mi="0" ci="1" mb="0" cb="0"/><line nr="1052" mi="0" ci="2" mb="0" cb="2"/><line nr="1053" mi="0" ci="2" mb="0" cb="2"/><line nr="1054" mi="0" ci="4" mb="0" cb="0"/><line nr="1056" mi="0" ci="7" mb="0" cb="0"/><line nr="1059" mi="0" ci="1" mb="0" cb="0"/><line nr="1075" mi="0" ci="2" mb="0" cb="2"/><line nr="1076" mi="0" ci="3" mb="0" cb="0"/><line nr="1078" mi="0" ci="1" mb="0" cb="0"/><line nr="1096" mi="0" ci="2" mb="0" cb="2"/><line nr="1097" mi="0" ci="7" mb="0" cb="0"/><line nr="1099" mi="0" ci="1" mb="0" cb="0"/><line nr="1121" mi="0" ci="2" mb="1" cb="1"/><line nr="1122" mi="0" ci="2" mb="0" cb="2"/><line nr="1123" mi="0" ci="4" mb="0" cb="0"/><line nr="1125" mi="0" ci="8" mb="0" cb="0"/><line nr="1128" mi="0" ci="1" mb="0" cb="0"/><line nr="1142" mi="0" ci="2" mb="0" cb="2"/><line nr="1143" mi="0" ci="4" mb="0" cb="0"/><line nr="1145" mi="0" ci="1" mb="0" cb="0"/><line nr="1162" mi="0" ci="2" mb="0" cb="2"/><line nr="1163" mi="0" ci="4" mb="0" cb="0"/><line nr="1165" mi="0" ci="1" mb="0" cb="0"/><line nr="1185" mi="0" ci="2" mb="1" cb="1"/><line nr="1186" mi="0" ci="5" mb="0" cb="0"/><line nr="1188" mi="0" ci="1" mb="0" cb="0"/><line nr="1202" mi="0" ci="2" mb="0" cb="2"/><line nr="1203" mi="0" ci="3" mb="0" cb="0"/><line nr="1205" mi="0" ci="1" mb="0" cb="0"/><line nr="1222" mi="0" ci="2" mb="0" cb="2"/><line nr="1223" mi="0" ci="4" mb="0" cb="0"/><line nr="1225" mi="0" ci="1" mb="0" cb="0"/><line nr="1245" mi="0" ci="2" mb="1" cb="1"/><line nr="1246" mi="0" ci="2" mb="0" cb="2"/><line nr="1247" mi="0" ci="4" mb="0" cb="0"/><line nr="1249" mi="0" ci="5" mb="0" cb="0"/><line nr="1252" mi="0" ci="1" mb="0" cb="0"/><line nr="1269" mi="2" ci="0" mb="2" cb="0"/><line nr="1270" mi="4" ci="0" mb="0" cb="0"/><line nr="1272" mi="1" ci="0" mb="0" cb="0"/><line nr="1291" mi="2" ci="0" mb="2" cb="0"/><line nr="1292" mi="5" ci="0" mb="0" cb="0"/><line nr="1294" mi="1" ci="0" mb="0" cb="0"/><line nr="1316" mi="2" ci="0" mb="2" cb="0"/><line nr="1317" mi="2" ci="0" mb="2" cb="0"/><line nr="1318" mi="4" ci="0" mb="0" cb="0"/><line nr="1320" mi="6" ci="0" mb="0" cb="0"/><line nr="1323" mi="1" ci="0" mb="0" cb="0"/><line nr="1341" mi="0" ci="2" mb="0" cb="2"/><line nr="1342" mi="0" ci="1" mb="0" cb="0"/><line nr="1344" mi="0" ci="2" mb="0" cb="2"/><line nr="1345" mi="0" ci="2" mb="0" cb="0"/><line nr="1347" mi="0" ci="9" mb="0" cb="2"/><line nr="1348" mi="0" ci="2" mb="0" cb="2"/><line nr="1349" mi="0" ci="5" mb="0" cb="0"/><line nr="1351" mi="0" ci="4" mb="0" cb="0"/><line nr="1352" mi="0" ci="1" mb="0" cb="0"/><line nr="1353" mi="0" ci="1" mb="0" cb="0"/><line nr="1373" mi="0" ci="2" mb="0" cb="2"/><line nr="1374" mi="0" ci="5" mb="0" cb="0"/><line nr="1376" mi="0" ci="2" mb="0" cb="2"/><line nr="1377" mi="0" ci="1" mb="0" cb="0"/><line nr="1379" mi="0" ci="2" mb="0" cb="2"/><line nr="1380" mi="0" ci="2" mb="0" cb="0"/><line nr="1382" mi="0" ci="9" mb="0" cb="2"/><line nr="1383" mi="0" ci="2" mb="0" cb="2"/><line nr="1384" mi="0" ci="6" mb="0" cb="0"/><line nr="1386" mi="0" ci="5" mb="0" cb="0"/><line nr="1387" mi="0" ci="1" mb="0" cb="0"/><line nr="1389" mi="0" ci="1" mb="0" cb="0"/><line nr="1404" mi="0" ci="2" mb="0" cb="2"/><line nr="1405" mi="0" ci="1" mb="0" cb="0"/><line nr="1407" mi="0" ci="2" mb="0" cb="2"/><line nr="1408" mi="0" ci="2" mb="0" cb="0"/><line nr="1410" mi="0" ci="9" mb="0" cb="2"/><line nr="1411" mi="0" ci="2" mb="0" cb="2"/><line nr="1412" mi="0" ci="4" mb="0" cb="0"/><line nr="1414" mi="0" ci="3" mb="0" cb="0"/><line nr="1415" mi="0" ci="1" mb="0" cb="0"/><line nr="1416" mi="0" ci="1" mb="0" cb="0"/><line nr="1440" mi="0" ci="4" mb="0" cb="0"/><line nr="1441" mi="0" ci="4" mb="0" cb="2"/><line nr="1442" mi="0" ci="2" mb="0" cb="0"/><line nr="1444" mi="0" ci="3" mb="0" cb="0"/><line nr="1465" mi="0" ci="6" mb="0" cb="0"/><line nr="1486" mi="0" ci="2" mb="0" cb="0"/><line nr="1487" mi="0" ci="2" mb="0" cb="0"/><line nr="1488" mi="0" ci="7" mb="0" cb="2"/><line nr="1489" mi="0" ci="5" mb="0" cb="0"/><line nr="1490" mi="0" ci="6" mb="0" cb="0"/><line nr="1492" mi="0" ci="2" mb="0" cb="0"/><line nr="1516" mi="0" ci="8" mb="0" cb="0"/><line nr="1541" mi="0" ci="4" mb="0" cb="2"/><line nr="1542" mi="0" ci="3" mb="0" cb="0"/><line nr="1544" mi="0" ci="4" mb="1" cb="1"/><line nr="1545" mi="2" ci="0" mb="0" cb="0"/><line nr="1547" mi="0" ci="3" mb="0" cb="0"/><line nr="1548" mi="0" ci="2" mb="0" cb="0"/><line nr="1549" mi="0" ci="9" mb="1" cb="3"/><line nr="1550" mi="0" ci="3" mb="0" cb="0"/><line nr="1553" mi="0" ci="2" mb="0" cb="0"/><line nr="1554" mi="0" ci="11" mb="0" cb="4"/><line nr="1555" mi="0" ci="5" mb="0" cb="0"/><line nr="1556" mi="0" ci="5" mb="0" cb="0"/><line nr="1557" mi="0" ci="4" mb="0" cb="2"/><line nr="1559" mi="0" ci="9" mb="0" cb="0"/><line nr="1562" mi="0" ci="2" mb="0" cb="0"/><line nr="1582" mi="0" ci="5" mb="0" cb="0"/><line nr="1583" mi="0" ci="4" mb="0" cb="0"/><line nr="1584" mi="0" ci="1" mb="0" cb="0"/><line nr="1607" mi="0" ci="2" mb="0" cb="2"/><line nr="1608" mi="0" ci="4" mb="0" cb="0"/><line nr="1610" mi="0" ci="6" mb="0" cb="0"/><line nr="1611" mi="0" ci="4" mb="0" cb="0"/><line nr="1613" mi="0" ci="1" mb="0" cb="0"/><line nr="1636" mi="0" ci="4" mb="0" cb="0"/><line nr="1637" mi="0" ci="4" mb="0" cb="2"/><line nr="1638" mi="0" ci="2" mb="0" cb="0"/><line nr="1640" mi="0" ci="3" mb="0" cb="0"/><line nr="1659" mi="0" ci="6" mb="0" cb="0"/><line nr="1678" mi="0" ci="2" mb="0" cb="0"/><line nr="1679" mi="0" ci="2" mb="0" cb="0"/><line nr="1680" mi="0" ci="7" mb="0" cb="2"/><line nr="1681" mi="0" ci="5" mb="0" cb="0"/><line nr="1682" mi="0" ci="6" mb="0" cb="0"/><line nr="1684" mi="0" ci="2" mb="0" cb="0"/><line nr="1708" mi="0" ci="8" mb="0" cb="0"/><line nr="1732" mi="0" ci="4" mb="0" cb="2"/><line nr="1733" mi="0" ci="3" mb="0" cb="0"/><line nr="1735" mi="0" ci="4" mb="1" cb="1"/><line nr="1736" mi="2" ci="0" mb="0" cb="0"/><line nr="1738" mi="0" ci="3" mb="0" cb="0"/><line nr="1739" mi="0" ci="10" mb="1" cb="3"/><line nr="1740" mi="0" ci="3" mb="0" cb="0"/><line nr="1743" mi="0" ci="2" mb="0" cb="0"/><line nr="1744" mi="0" ci="11" mb="0" cb="4"/><line nr="1745" mi="0" ci="5" mb="0" cb="0"/><line nr="1746" mi="0" ci="5" mb="0" cb="0"/><line nr="1747" mi="0" ci="4" mb="0" cb="2"/><line nr="1749" mi="0" ci="10" mb="0" cb="0"/><line nr="1752" mi="0" ci="2" mb="0" cb="0"/><line nr="1776" mi="0" ci="5" mb="0" cb="0"/><line nr="1777" mi="0" ci="4" mb="0" cb="0"/><line nr="1780" mi="0" ci="2" mb="0" cb="0"/><line nr="1781" mi="0" ci="1" mb="0" cb="0"/><line nr="1808" mi="0" ci="2" mb="0" cb="2"/><line nr="1809" mi="0" ci="4" mb="0" cb="0"/><line nr="1811" mi="0" ci="6" mb="0" cb="0"/><line nr="1812" mi="0" ci="4" mb="0" cb="0"/><line nr="1815" mi="0" ci="2" mb="0" cb="0"/><line nr="1817" mi="0" ci="1" mb="0" cb="0"/><line nr="1837" mi="0" ci="3" mb="1" cb="1"/><line nr="1838" mi="0" ci="5" mb="0" cb="0"/><line nr="1840" mi="0" ci="3" mb="1" cb="1"/><line nr="1841" mi="0" ci="5" mb="0" cb="0"/><line nr="1844" mi="0" ci="3" mb="0" cb="0"/><line nr="1845" mi="0" ci="3" mb="0" cb="2"/><line nr="1846" mi="0" ci="3" mb="0" cb="0"/><line nr="1847" mi="0" ci="3" mb="0" cb="2"/><line nr="1848" mi="0" ci="2" mb="0" cb="0"/><line nr="1850" mi="0" ci="3" mb="0" cb="0"/><line nr="1851" mi="0" ci="1" mb="0" cb="0"/><line nr="1853" mi="0" ci="3" mb="0" cb="0"/><line nr="1854" mi="1" ci="6" mb="1" cb="1"/><line nr="1875" mi="0" ci="3" mb="0" cb="0"/><line nr="1876" mi="0" ci="3" mb="0" cb="0"/><line nr="1878" mi="0" ci="3" mb="0" cb="0"/><line nr="1879" mi="0" ci="3" mb="0" cb="2"/><line nr="1880" mi="0" ci="3" mb="0" cb="0"/><line nr="1881" mi="0" ci="3" mb="0" cb="2"/><line nr="1882" mi="0" ci="2" mb="0" cb="0"/><line nr="1884" mi="0" ci="3" mb="0" cb="0"/><line nr="1885" mi="0" ci="1" mb="0" cb="0"/><line nr="1887" mi="0" ci="3" mb="0" cb="0"/><line nr="1888" mi="0" ci="7" mb="0" cb="2"/><line nr="1907" mi="0" ci="3" mb="0" cb="0"/><line nr="1908" mi="0" ci="3" mb="0" cb="0"/><line nr="1910" mi="0" ci="3" mb="0" cb="0"/><line nr="1911" mi="0" ci="3" mb="0" cb="0"/><line nr="1912" mi="0" ci="8" mb="1" cb="5"/><line nr="1913" mi="0" ci="3" mb="0" cb="0"/><line nr="1914" mi="0" ci="4" mb="0" cb="0"/><line nr="1916" mi="0" ci="12" mb="0" cb="4"/><line nr="1936" mi="0" ci="4" mb="1" cb="1"/><line nr="1937" mi="12" ci="0" mb="0" cb="0"/><line nr="1944" mi="0" ci="2" mb="0" cb="2"/><line nr="1945" mi="0" ci="3" mb="0" cb="0"/><line nr="1947" mi="0" ci="2" mb="0" cb="0"/><line nr="1948" mi="0" ci="4" mb="0" cb="2"/><line nr="1949" mi="0" ci="10" mb="0" cb="0"/><line nr="1950" mi="0" ci="4" mb="0" cb="2"/><line nr="1951" mi="0" ci="1" mb="0" cb="0"/><line nr="1953" mi="0" ci="4" mb="0" cb="0"/><line nr="1954" mi="0" ci="1" mb="0" cb="0"/><line nr="1955" mi="0" ci="4" mb="0" cb="0"/><line nr="1975" mi="0" ci="4" mb="0" cb="2"/><line nr="1976" mi="0" ci="12" mb="0" cb="0"/><line nr="1983" mi="0" ci="2" mb="0" cb="2"/><line nr="1984" mi="0" ci="3" mb="0" cb="0"/><line nr="1986" mi="0" ci="2" mb="0" cb="0"/><line nr="1987" mi="0" ci="4" mb="0" cb="2"/><line nr="1988" mi="0" ci="10" mb="0" cb="0"/><line nr="1989" mi="0" ci="4" mb="0" cb="2"/><line nr="1990" mi="0" ci="1" mb="0" cb="0"/><line nr="1992" mi="0" ci="4" mb="0" cb="0"/><line nr="1993" mi="0" ci="1" mb="0" cb="0"/><line nr="1994" mi="0" ci="4" mb="0" cb="0"/><line nr="2013" mi="0" ci="4" mb="0" cb="2"/><line nr="2014" mi="0" ci="12" mb="0" cb="0"/><line nr="2016" mi="0" ci="4" mb="0" cb="0"/><line nr="2017" mi="0" ci="4" mb="0" cb="2"/><line nr="2018" mi="0" ci="16" mb="0" cb="0"/><line nr="2020" mi="0" ci="1" mb="0" cb="0"/><line nr="2038" mi="0" ci="4" mb="0" cb="0"/><line nr="2039" mi="0" ci="4" mb="0" cb="2"/><line nr="2040" mi="0" ci="16" mb="0" cb="0"/><line nr="2042" mi="0" ci="1" mb="0" cb="0"/><line nr="2060" mi="0" ci="2" mb="0" cb="2"/><line nr="2061" mi="0" ci="12" mb="0" cb="0"/><line nr="2063" mi="0" ci="2" mb="0" cb="0"/><line nr="2064" mi="0" ci="2" mb="0" cb="2"/><line nr="2065" mi="0" ci="4" mb="0" cb="0"/><line nr="2066" mi="0" ci="8" mb="0" cb="0"/><line nr="2067" mi="0" ci="3" mb="0" cb="2"/><line nr="2068" mi="0" ci="1" mb="0" cb="0"/><line nr="2070" mi="0" ci="4" mb="0" cb="0"/><line nr="2071" mi="0" ci="1" mb="0" cb="0"/><line nr="2072" mi="0" ci="4" mb="0" cb="0"/><line nr="2088" mi="7" ci="0" mb="0" cb="0"/><line nr="2106" mi="0" ci="2" mb="0" cb="2"/><line nr="2107" mi="0" ci="12" mb="0" cb="0"/><line nr="2109" mi="0" ci="2" mb="0" cb="0"/><line nr="2110" mi="0" ci="2" mb="0" cb="2"/><line nr="2111" mi="0" ci="4" mb="0" cb="0"/><line nr="2112" mi="0" ci="8" mb="0" cb="0"/><line nr="2113" mi="0" ci="3" mb="0" cb="2"/><line nr="2114" mi="0" ci="1" mb="0" cb="0"/><line nr="2116" mi="0" ci="4" mb="0" cb="0"/><line nr="2117" mi="0" ci="1" mb="0" cb="0"/><line nr="2118" mi="0" ci="4" mb="0" cb="0"/><line nr="2134" mi="7" ci="0" mb="0" cb="0"/><line nr="2154" mi="0" ci="6" mb="0" cb="0"/><line nr="2155" mi="0" ci="3" mb="0" cb="2"/><line nr="2156" mi="0" ci="16" mb="0" cb="0"/><line nr="2158" mi="0" ci="1" mb="0" cb="0"/><line nr="2175" mi="6" ci="0" mb="0" cb="0"/><line nr="2176" mi="1" ci="0" mb="0" cb="0"/><line nr="2195" mi="0" ci="6" mb="0" cb="0"/><line nr="2196" mi="0" ci="3" mb="0" cb="2"/><line nr="2197" mi="0" ci="16" mb="0" cb="0"/><line nr="2199" mi="0" ci="1" mb="0" cb="0"/><line nr="2216" mi="6" ci="0" mb="0" cb="0"/><line nr="2217" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="117" covered="1265"/><counter type="BRANCH" missed="22" covered="178"/><counter type="LINE" missed="32" covered="340"/><counter type="COMPLEXITY" missed="29" covered="157"/><counter type="METHOD" missed="12" covered="74"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CopyUtils.java"><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="7" mb="0" cb="2"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="7" mb="0" cb="2"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="6" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="132"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ByteOrderMark.java"><line nr="36" mi="0" ci="19" mb="0" cb="0"/><line nr="39" mi="0" ci="15" mb="0" cb="0"/><line nr="42" mi="0" ci="15" mb="0" cb="0"/><line nr="48" mi="0" ci="23" mb="0" cb="0"/><line nr="54" mi="0" ci="24" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="4"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="4"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="9" mb="0" cb="2"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="2"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="0" cb="2"/><line nr="139" mi="0" ci="8" mb="0" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="17" mb="0" cb="2"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="9" mb="0" cb="2"/><line nr="174" mi="0" ci="2" mb="0" cb="2"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="11" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="295"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DirectoryWalker.java"><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="4"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="6" mb="0" cb="2"/><line nr="305" mi="0" ci="6" mb="0" cb="2"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="13" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="2" mb="0" cb="2"/><line nr="331" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="5" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="338" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="352" mi="0" ci="6" mb="0" cb="2"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="7" mb="0" cb="4"/><line nr="356" mi="0" ci="5" mb="0" cb="0"/><line nr="357" mi="0" ci="11" mb="0" cb="2"/><line nr="358" mi="0" ci="6" mb="0" cb="0"/><line nr="359" mi="0" ci="2" mb="0" cb="2"/><line nr="360" mi="0" ci="6" mb="0" cb="0"/><line nr="362" mi="0" ci="16" mb="0" cb="2"/><line nr="363" mi="0" ci="3" mb="0" cb="2"/><line nr="364" mi="0" ci="6" mb="0" cb="0"/><line nr="366" mi="0" ci="5" mb="0" cb="0"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="368" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="0" ci="5" mb="0" cb="0"/><line nr="375" mi="0" ci="5" mb="0" cb="0"/><line nr="376" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="0" ci="6" mb="0" cb="2"/><line nr="395" mi="0" ci="6" mb="0" cb="0"/><line nr="397" mi="0" ci="1" mb="0" cb="0"/><line nr="437" mi="0" ci="2" mb="0" cb="0"/><line nr="456" mi="0" ci="2" mb="0" cb="0"/><line nr="471" mi="0" ci="1" mb="0" cb="0"/><line nr="490" mi="0" ci="2" mb="0" cb="0"/><line nr="505" mi="0" ci="1" mb="0" cb="0"/><line nr="520" mi="0" ci="2" mb="0" cb="0"/><line nr="535" mi="1" ci="0" mb="0" cb="0"/><line nr="549" mi="0" ci="1" mb="0" cb="0"/><line nr="563" mi="0" ci="1" mb="0" cb="0"/><line nr="575" mi="0" ci="1" mb="0" cb="0"/><line nr="600" mi="0" ci="5" mb="0" cb="0"/><line nr="601" mi="0" ci="1" mb="0" cb="0"/><line nr="613" mi="0" ci="3" mb="0" cb="0"/><line nr="614" mi="0" ci="3" mb="0" cb="0"/><line nr="615" mi="0" ci="3" mb="0" cb="0"/><line nr="616" mi="0" ci="1" mb="0" cb="0"/><line nr="624" mi="0" ci="3" mb="0" cb="0"/><line nr="633" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="242"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="1" covered="64"/><counter type="COMPLEXITY" missed="1" covered="32"/><counter type="METHOD" missed="1" covered="19"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ThreadMonitor.java"><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="2"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileCleaningTracker.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="2"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="12" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="9" mb="0" cb="4"/><line nr="220" mi="0" ci="6" mb="0" cb="0"/><line nr="221" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="2"/><line nr="223" mi="0" ci="7" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="7" mb="0" cb="2"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="196"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="1" covered="52"/><counter type="COMPLEXITY" missed="2" covered="21"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="IOExceptionWithCause.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="2" ci="6" mb="1" cb="1"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LineIterator.java"><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="2"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="2"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="2"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="107"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileSystemUtils.java"><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="1" cb="1"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="1" cb="1"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="2" cb="0"/><line nr="80" mi="5" ci="0" mb="2" cb="0"/><line nr="81" mi="5" ci="0" mb="2" cb="0"/><line nr="82" mi="5" ci="0" mb="2" cb="0"/><line nr="83" mi="5" ci="0" mb="2" cb="0"/><line nr="84" mi="5" ci="0" mb="2" cb="0"/><line nr="85" mi="3" ci="0" mb="2" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="87" mi="7" ci="0" mb="2" cb="0"/><line nr="88" mi="5" ci="0" mb="2" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="2" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="8" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="2"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="1" cb="4"/><line nr="264" mi="0" ci="14" mb="0" cb="2"/><line nr="266" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="7" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="8" mb="0" cb="4"/><line nr="290" mi="0" ci="11" mb="0" cb="0"/><line nr="294" mi="0" ci="22" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="303" mi="0" ci="9" mb="0" cb="2"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="2"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="310" mi="0" ci="14" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="0"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="2"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="0" cb="2"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="341" mi="0" ci="2" mb="0" cb="2"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="343" mi="0" ci="9" mb="1" cb="5"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="349" mi="0" ci="1" mb="0" cb="0"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="2" mb="0" cb="2"/><line nr="352" mi="0" ci="14" mb="0" cb="0"/><line nr="358" mi="0" ci="8" mb="0" cb="0"/><line nr="359" mi="0" ci="8" mb="0" cb="2"/><line nr="360" mi="0" ci="10" mb="1" cb="3"/><line nr="361" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="6" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="2"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="2" mb="0" cb="2"/><line nr="387" mi="0" ci="9" mb="0" cb="0"/><line nr="389" mi="0" ci="2" mb="0" cb="2"/><line nr="390" mi="0" ci="9" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="0" ci="29" mb="0" cb="2"/><line nr="396" mi="0" ci="6" mb="0" cb="0"/><line nr="397" mi="0" ci="4" mb="1" cb="1"/><line nr="399" mi="20" ci="0" mb="0" cb="0"/><line nr="403" mi="0" ci="5" mb="0" cb="0"/><line nr="406" mi="0" ci="6" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="2"/><line nr="409" mi="0" ci="8" mb="0" cb="4"/><line nr="410" mi="0" ci="5" mb="0" cb="0"/><line nr="411" mi="0" ci="6" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="18" mb="0" cb="0"/><line nr="418" mi="0" ci="3" mb="0" cb="0"/><line nr="420" mi="0" ci="3" mb="0" cb="0"/><line nr="421" mi="0" ci="3" mb="0" cb="0"/><line nr="422" mi="0" ci="3" mb="0" cb="0"/><line nr="423" mi="0" ci="5" mb="0" cb="0"/><line nr="437" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="4" mb="0" cb="2"/><line nr="439" mi="0" ci="18" mb="0" cb="0"/><line nr="443" mi="0" ci="2" mb="0" cb="0"/><line nr="445" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="0" ci="19" mb="0" cb="0"/><line nr="472" mi="0" ci="5" mb="0" cb="0"/><line nr="473" mi="0" ci="2" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="2" mb="0" cb="0"/><line nr="476" mi="0" ci="2" mb="0" cb="0"/><line nr="477" mi="0" ci="2" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="0"/><line nr="482" mi="0" ci="4" mb="0" cb="0"/><line nr="483" mi="0" ci="3" mb="0" cb="0"/><line nr="484" mi="0" ci="3" mb="0" cb="0"/><line nr="485" mi="0" ci="3" mb="0" cb="0"/><line nr="486" mi="0" ci="8" mb="0" cb="0"/><line nr="487" mi="0" ci="3" mb="0" cb="0"/><line nr="488" mi="0" ci="6" mb="1" cb="3"/><line nr="489" mi="0" ci="5" mb="0" cb="0"/><line nr="490" mi="0" ci="4" mb="0" cb="0"/><line nr="491" mi="0" ci="4" mb="0" cb="0"/><line nr="494" mi="0" ci="3" mb="0" cb="0"/><line nr="496" mi="0" ci="2" mb="0" cb="0"/><line nr="498" mi="0" ci="3" mb="0" cb="2"/><line nr="500" mi="0" ci="8" mb="0" cb="0"/><line nr="501" mi="0" ci="5" mb="0" cb="0"/><line nr="502" mi="0" ci="5" mb="0" cb="0"/><line nr="504" mi="0" ci="3" mb="0" cb="2"/><line nr="506" mi="0" ci="8" mb="0" cb="0"/><line nr="508" mi="0" ci="5" mb="0" cb="0"/><line nr="510" mi="0" ci="4" mb="0" cb="0"/><line nr="512" mi="1" ci="0" mb="0" cb="0"/><line nr="513" mi="8" ci="0" mb="0" cb="0"/><line nr="515" mi="10" ci="0" mb="0" cb="0"/><line nr="517" mi="0" ci="2" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="0"/><line nr="519" mi="0" ci="2" mb="0" cb="0"/><line nr="520" mi="0" ci="2" mb="0" cb="0"/><line nr="521" mi="0" ci="2" mb="1" cb="1"/><line nr="522" mi="0" ci="2" mb="0" cb="0"/><line nr="535" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="138" covered="591"/><counter type="BRANCH" missed="32" covered="61"/><counter type="LINE" missed="27" covered="122"/><counter type="COMPLEXITY" missed="22" covered="40"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FilenameUtils.java"><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="1" cb="1"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="6" mb="1" cb="1"/><line nr="149" mi="0" ci="10" mb="0" cb="4"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="2"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="6" mb="0" cb="2"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="0" cb="2"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="2"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="356" mi="0" ci="2" mb="0" cb="2"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="7" mb="0" cb="0"/><line nr="364" mi="0" ci="7" mb="0" cb="2"/><line nr="365" mi="0" ci="8" mb="0" cb="2"/><line nr="366" mi="0" ci="5" mb="0" cb="2"/><line nr="367" mi="0" ci="4" mb="0" cb="0"/><line nr="372" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="7" mb="0" cb="2"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="9" mb="0" cb="2"/><line nr="380" mi="0" ci="12" mb="0" cb="4"/><line nr="381" mi="0" ci="10" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="1" mb="0" cb="0"/><line nr="388" mi="0" ci="9" mb="0" cb="2"/><line nr="389" mi="0" ci="24" mb="0" cb="8"/><line nr="391" mi="0" ci="5" mb="0" cb="2"/><line nr="392" mi="0" ci="2" mb="0" cb="0"/><line nr="394" mi="0" ci="12" mb="0" cb="0"/><line nr="395" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="9" mb="0" cb="2"/><line nr="403" mi="0" ci="31" mb="2" cb="8"/><line nr="405" mi="0" ci="5" mb="0" cb="2"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="408" mi="0" ci="5" mb="0" cb="2"/><line nr="409" mi="0" ci="2" mb="0" cb="0"/><line nr="412" mi="0" ci="9" mb="0" cb="2"/><line nr="413" mi="0" ci="5" mb="0" cb="2"/><line nr="415" mi="0" ci="12" mb="0" cb="0"/><line nr="416" mi="0" ci="6" mb="0" cb="0"/><line nr="417" mi="0" ci="4" mb="0" cb="0"/><line nr="418" mi="0" ci="1" mb="0" cb="0"/><line nr="422" mi="0" ci="10" mb="0" cb="0"/><line nr="423" mi="0" ci="8" mb="0" cb="0"/><line nr="424" mi="0" ci="4" mb="0" cb="0"/><line nr="428" mi="0" ci="2" mb="0" cb="2"/><line nr="429" mi="0" ci="2" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="0" cb="2"/><line nr="432" mi="0" ci="7" mb="0" cb="0"/><line nr="434" mi="0" ci="4" mb="0" cb="4"/><line nr="435" mi="0" ci="7" mb="0" cb="0"/><line nr="437" mi="0" ci="9" mb="0" cb="0"/><line nr="482" mi="0" ci="3" mb="0" cb="0"/><line nr="483" mi="0" ci="2" mb="0" cb="2"/><line nr="484" mi="0" ci="2" mb="0" cb="0"/><line nr="486" mi="0" ci="2" mb="0" cb="2"/><line nr="487" mi="0" ci="3" mb="0" cb="0"/><line nr="489" mi="0" ci="2" mb="0" cb="2"/><line nr="490" mi="0" ci="2" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="0"/><line nr="493" mi="0" ci="2" mb="0" cb="2"/><line nr="494" mi="0" ci="3" mb="0" cb="0"/><line nr="496" mi="0" ci="6" mb="0" cb="0"/><line nr="497" mi="0" ci="3" mb="0" cb="2"/><line nr="498" mi="0" ci="10" mb="0" cb="0"/><line nr="500" mi="0" ci="12" mb="0" cb="0"/><line nr="531" mi="0" ci="2" mb="1" cb="1"/><line nr="532" mi="5" ci="0" mb="0" cb="0"/><line nr="535" mi="0" ci="2" mb="1" cb="1"/><line nr="536" mi="2" ci="0" mb="0" cb="0"/><line nr="539" mi="0" ci="5" mb="1" cb="1"/><line nr="540" mi="2" ci="0" mb="0" cb="0"/><line nr="543" mi="0" ci="5" mb="0" cb="0"/><line nr="554" mi="0" ci="7" mb="0" cb="4"/><line nr="555" mi="0" ci="2" mb="0" cb="0"/><line nr="557" mi="0" ci="5" mb="0" cb="0"/><line nr="567" mi="0" ci="7" mb="0" cb="4"/><line nr="568" mi="0" ci="2" mb="0" cb="0"/><line nr="570" mi="0" ci="5" mb="0" cb="0"/><line nr="580" mi="0" ci="2" mb="0" cb="2"/><line nr="581" mi="0" ci="2" mb="0" cb="0"/><line nr="583" mi="0" ci="2" mb="1" cb="1"/><line nr="584" mi="0" ci="3" mb="0" cb="0"/><line nr="586" mi="3" ci="0" mb="0" cb="0"/><line nr="623" mi="0" ci="2" mb="0" cb="2"/><line nr="624" mi="0" ci="2" mb="0" cb="0"/><line nr="626" mi="0" ci="3" mb="0" cb="0"/><line nr="627" mi="0" ci="2" mb="0" cb="2"/><line nr="628" mi="0" ci="2" mb="0" cb="0"/><line nr="630" mi="0" ci="4" mb="0" cb="0"/><line nr="631" mi="0" ci="3" mb="0" cb="2"/><line nr="632" mi="0" ci="2" mb="0" cb="0"/><line nr="634" mi="0" ci="3" mb="0" cb="2"/><line nr="635" mi="0" ci="3" mb="0" cb="2"/><line nr="636" mi="0" ci="2" mb="0" cb="0"/><line nr="638" mi="0" ci="7" mb="0" cb="2"/><line nr="640" mi="0" ci="3" mb="0" cb="2"/><line nr="641" mi="0" ci="5" mb="0" cb="0"/><line nr="642" mi="0" ci="5" mb="0" cb="0"/><line nr="643" mi="0" ci="6" mb="0" cb="4"/><line nr="644" mi="0" ci="4" mb="0" cb="0"/><line nr="646" mi="0" ci="7" mb="0" cb="2"/><line nr="647" mi="0" ci="7" mb="0" cb="2"/><line nr="648" mi="0" ci="6" mb="0" cb="0"/><line nr="650" mi="0" ci="4" mb="0" cb="0"/><line nr="651" mi="0" ci="3" mb="0" cb="2"/><line nr="652" mi="0" ci="3" mb="0" cb="0"/><line nr="653" mi="0" ci="6" mb="1" cb="3"/><line nr="654" mi="0" ci="8" mb="0" cb="4"/><line nr="655" mi="0" ci="2" mb="0" cb="0"/><line nr="657" mi="0" ci="2" mb="0" cb="0"/><line nr="659" mi="0" ci="2" mb="0" cb="0"/><line nr="661" mi="0" ci="6" mb="0" cb="4"/><line nr="662" mi="0" ci="5" mb="0" cb="0"/><line nr="663" mi="0" ci="5" mb="0" cb="0"/><line nr="664" mi="0" ci="12" mb="0" cb="8"/><line nr="665" mi="0" ci="2" mb="0" cb="0"/><line nr="667" mi="0" ci="7" mb="0" cb="2"/><line nr="668" mi="0" ci="7" mb="0" cb="2"/><line nr="669" mi="0" ci="6" mb="0" cb="0"/><line nr="671" mi="0" ci="7" mb="0" cb="2"/><line nr="689" mi="0" ci="2" mb="0" cb="2"/><line nr="690" mi="0" ci="2" mb="0" cb="0"/><line nr="692" mi="0" ci="4" mb="0" cb="0"/><line nr="693" mi="0" ci="4" mb="0" cb="0"/><line nr="694" mi="0" ci="4" mb="0" cb="0"/><line nr="711" mi="0" ci="2" mb="0" cb="2"/><line nr="712" mi="0" ci="2" mb="0" cb="0"/><line nr="714" mi="0" ci="4" mb="0" cb="0"/><line nr="715" mi="0" ci="3" mb="0" cb="0"/><line nr="716" mi="0" ci="7" mb="0" cb="2"/><line nr="750" mi="0" ci="2" mb="0" cb="2"/><line nr="751" mi="0" ci="2" mb="0" cb="0"/><line nr="753" mi="0" ci="3" mb="0" cb="0"/><line nr="754" mi="0" ci="2" mb="0" cb="2"/><line nr="755" mi="0" ci="2" mb="0" cb="0"/><line nr="757" mi="0" ci="4" mb="0" cb="2"/><line nr="758" mi="0" ci="9" mb="0" cb="0"/><line nr="760" mi="0" ci="5" mb="0" cb="0"/><line nr="786" mi="0" ci="4" mb="0" cb="0"/><line nr="813" mi="0" ci="4" mb="0" cb="0"/><line nr="824" mi="0" ci="2" mb="0" cb="2"/><line nr="825" mi="0" ci="2" mb="0" cb="0"/><line nr="827" mi="0" ci="3" mb="0" cb="0"/><line nr="828" mi="0" ci="2" mb="0" cb="2"/><line nr="829" mi="0" ci="2" mb="0" cb="0"/><line nr="831" mi="0" ci="3" mb="0" cb="0"/><line nr="832" mi="0" ci="4" mb="0" cb="0"/><line nr="833" mi="0" ci="9" mb="0" cb="6"/><line nr="834" mi="0" ci="2" mb="0" cb="0"/><line nr="836" mi="0" ci="5" mb="0" cb="0"/><line nr="865" mi="0" ci="4" mb="0" cb="0"/><line nr="895" mi="0" ci="4" mb="0" cb="0"/><line nr="906" mi="0" ci="2" mb="0" cb="2"/><line nr="907" mi="0" ci="2" mb="0" cb="0"/><line nr="909" mi="0" ci="3" mb="0" cb="0"/><line nr="910" mi="0" ci="2" mb="0" cb="2"/><line nr="911" mi="0" ci="2" mb="0" cb="0"/><line nr="913" mi="0" ci="4" mb="0" cb="2"/><line nr="914" mi="0" ci="2" mb="0" cb="2"/><line nr="915" mi="0" ci="3" mb="0" cb="0"/><line nr="917" mi="0" ci="2" mb="0" cb="0"/><line nr="920" mi="0" ci="3" mb="0" cb="0"/><line nr="921" mi="0" ci="2" mb="0" cb="2"/><line nr="922" mi="0" ci="5" mb="0" cb="0"/><line nr="924" mi="0" ci="8" mb="0" cb="2"/><line nr="925" mi="0" ci="2" mb="0" cb="2"/><line nr="926" mi="0" ci="1" mb="0" cb="0"/><line nr="928" mi="0" ci="5" mb="0" cb="0"/><line nr="949" mi="0" ci="2" mb="0" cb="2"/><line nr="950" mi="0" ci="2" mb="0" cb="0"/><line nr="952" mi="0" ci="3" mb="0" cb="0"/><line nr="953" mi="0" ci="6" mb="0" cb="0"/><line nr="974" mi="0" ci="4" mb="0" cb="0"/><line nr="996" mi="0" ci="2" mb="0" cb="2"/><line nr="997" mi="0" ci="2" mb="0" cb="0"/><line nr="999" mi="0" ci="3" mb="0" cb="0"/><line nr="1000" mi="0" ci="3" mb="0" cb="2"/><line nr="1001" mi="0" ci="2" mb="0" cb="0"/><line nr="1003" mi="0" ci="6" mb="0" cb="0"/><line nr="1026" mi="0" ci="2" mb="0" cb="2"/><line nr="1027" mi="0" ci="2" mb="0" cb="0"/><line nr="1029" mi="0" ci="3" mb="0" cb="0"/><line nr="1030" mi="0" ci="3" mb="0" cb="2"/><line nr="1031" mi="0" ci="2" mb="0" cb="0"/><line nr="1033" mi="0" ci="5" mb="0" cb="0"/><line nr="1050" mi="0" ci="6" mb="0" cb="0"/><line nr="1065" mi="0" ci="6" mb="0" cb="0"/><line nr="1081" mi="0" ci="6" mb="0" cb="0"/><line nr="1098" mi="0" ci="6" mb="0" cb="0"/><line nr="1116" mi="0" ci="4" mb="0" cb="4"/><line nr="1117" mi="0" ci="8" mb="0" cb="4"/><line nr="1119" mi="0" ci="2" mb="0" cb="2"/><line nr="1120" mi="0" ci="3" mb="0" cb="0"/><line nr="1121" mi="0" ci="3" mb="0" cb="0"/><line nr="1122" mi="0" ci="4" mb="0" cb="4"/><line nr="1123" mi="0" ci="5" mb="0" cb="0"/><line nr="1127" mi="0" ci="2" mb="0" cb="2"/><line nr="1128" mi="0" ci="2" mb="0" cb="0"/><line nr="1130" mi="0" ci="5" mb="0" cb="0"/><line nr="1146" mi="0" ci="2" mb="0" cb="2"/><line nr="1147" mi="0" ci="2" mb="0" cb="0"/><line nr="1149" mi="0" ci="5" mb="0" cb="4"/><line nr="1150" mi="0" ci="8" mb="0" cb="2"/><line nr="1152" mi="0" ci="3" mb="0" cb="0"/><line nr="1153" mi="0" ci="4" mb="0" cb="0"/><line nr="1168" mi="0" ci="2" mb="0" cb="2"/><line nr="1169" mi="0" ci="2" mb="0" cb="0"/><line nr="1171" mi="0" ci="5" mb="0" cb="4"/><line nr="1172" mi="0" ci="8" mb="0" cb="2"/><line nr="1174" mi="0" ci="3" mb="0" cb="0"/><line nr="1175" mi="0" ci="16" mb="0" cb="2"/><line nr="1176" mi="0" ci="4" mb="0" cb="2"/><line nr="1177" mi="0" ci="2" mb="0" cb="0"/><line nr="1180" mi="0" ci="2" mb="0" cb="0"/><line nr="1195" mi="0" ci="2" mb="0" cb="2"/><line nr="1196" mi="0" ci="2" mb="0" cb="0"/><line nr="1198" mi="0" ci="5" mb="0" cb="4"/><line nr="1199" mi="0" ci="8" mb="0" cb="2"/><line nr="1201" mi="0" ci="3" mb="0" cb="0"/><line nr="1202" mi="0" ci="10" mb="0" cb="2"/><line nr="1203" mi="0" ci="4" mb="0" cb="2"/><line nr="1204" mi="0" ci="2" mb="0" cb="0"/><line nr="1206" mi="0" ci="1" mb="0" cb="0"/><line nr="1207" mi="0" ci="2" mb="0" cb="0"/><line nr="1234" mi="0" ci="5" mb="0" cb="0"/><line nr="1260" mi="0" ci="5" mb="0" cb="0"/><line nr="1278" mi="0" ci="4" mb="0" cb="4"/><line nr="1279" mi="0" ci="2" mb="0" cb="0"/><line nr="1281" mi="0" ci="4" mb="0" cb="4"/><line nr="1282" mi="0" ci="2" mb="0" cb="0"/><line nr="1284" mi="0" ci="2" mb="1" cb="1"/><line nr="1285" mi="2" ci="0" mb="0" cb="0"/><line nr="1287" mi="0" ci="3" mb="0" cb="0"/><line nr="1288" mi="0" ci="2" mb="0" cb="0"/><line nr="1289" mi="0" ci="2" mb="0" cb="0"/><line nr="1290" mi="0" ci="2" mb="0" cb="0"/><line nr="1291" mi="0" ci="4" mb="0" cb="0"/><line nr="1295" mi="0" ci="3" mb="0" cb="2"/><line nr="1296" mi="0" ci="4" mb="0" cb="0"/><line nr="1297" mi="0" ci="4" mb="0" cb="0"/><line nr="1298" mi="0" ci="4" mb="0" cb="0"/><line nr="1299" mi="0" ci="2" mb="0" cb="0"/><line nr="1303" mi="0" ci="4" mb="0" cb="2"/><line nr="1305" mi="0" ci="6" mb="0" cb="2"/><line nr="1307" mi="0" ci="1" mb="0" cb="0"/><line nr="1308" mi="0" ci="4" mb="0" cb="2"/><line nr="1309" mi="0" ci="1" mb="0" cb="0"/><line nr="1311" mi="0" ci="3" mb="0" cb="0"/><line nr="1313" mi="0" ci="6" mb="0" cb="2"/><line nr="1315" mi="0" ci="2" mb="0" cb="0"/><line nr="1316" mi="0" ci="6" mb="0" cb="2"/><line nr="1317" mi="0" ci="4" mb="0" cb="0"/><line nr="1322" mi="0" ci="2" mb="0" cb="2"/><line nr="1324" mi="0" ci="8" mb="0" cb="0"/><line nr="1325" mi="0" ci="3" mb="0" cb="2"/><line nr="1327" mi="0" ci="1" mb="0" cb="0"/><line nr="1329" mi="0" ci="10" mb="0" cb="0"/><line nr="1330" mi="0" ci="2" mb="0" cb="2"/><line nr="1331" mi="0" ci="13" mb="0" cb="0"/><line nr="1333" mi="0" ci="1" mb="0" cb="0"/><line nr="1335" mi="0" ci="8" mb="0" cb="2"/><line nr="1337" mi="0" ci="1" mb="0" cb="0"/><line nr="1342" mi="0" ci="7" mb="0" cb="0"/><line nr="1343" mi="0" ci="2" mb="0" cb="0"/><line nr="1346" mi="0" ci="2" mb="0" cb="0"/><line nr="1350" mi="0" ci="8" mb="0" cb="4"/><line nr="1351" mi="0" ci="2" mb="0" cb="0"/><line nr="1354" mi="0" ci="3" mb="0" cb="2"/><line nr="1356" mi="0" ci="2" mb="0" cb="0"/><line nr="1371" mi="0" ci="10" mb="0" cb="4"/><line nr="1372" mi="0" ci="7" mb="0" cb="0"/><line nr="1375" mi="0" ci="3" mb="0" cb="0"/><line nr="1376" mi="0" ci="4" mb="0" cb="0"/><line nr="1377" mi="0" ci="4" mb="0" cb="0"/><line nr="1378" mi="0" ci="8" mb="0" cb="2"/><line nr="1379" mi="0" ci="10" mb="0" cb="4"/><line nr="1380" mi="0" ci="3" mb="0" cb="2"/><line nr="1381" mi="0" ci="5" mb="0" cb="0"/><line nr="1382" mi="0" ci="3" mb="0" cb="0"/><line nr="1384" mi="0" ci="5" mb="0" cb="2"/><line nr="1385" mi="0" ci="5" mb="0" cb="0"/><line nr="1386" mi="0" ci="7" mb="1" cb="3"/><line nr="1387" mi="0" ci="8" mb="0" cb="2"/><line nr="1388" mi="0" ci="5" mb="0" cb="0"/><line nr="1391" mi="0" ci="6" mb="0" cb="0"/><line nr="1394" mi="0" ci="3" mb="0" cb="2"/><line nr="1395" mi="0" ci="5" mb="0" cb="0"/><line nr="1398" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="1290"/><counter type="BRANCH" missed="11" covered="291"/><counter type="LINE" missed="8" covered="297"/><counter type="COMPLEXITY" missed="12" covered="179"/><counter type="METHOD" missed="1" covered="39"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileDeleteStrategy.java"><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="4"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="4"/><line nr="94" mi="0" ci="12" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="12" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="70"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IOCase.java"><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="2" ci="9" mb="1" cb="1"/><line nr="81" mi="0" ci="5" mb="0" cb="2"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="12" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="4"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="11" mb="0" cb="2"/><line nr="165" mi="0" ci="4" mb="0" cb="4"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="11" mb="0" cb="2"/><line nr="183" mi="0" ci="14" mb="0" cb="2"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="16" mb="0" cb="2"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="2"/><line nr="220" mi="0" ci="7" mb="0" cb="2"/><line nr="221" mi="0" ci="6" mb="0" cb="2"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="14" mb="0" cb="2"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="189"/><counter type="BRANCH" missed="1" covered="31"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="1" covered="28"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileCleaner.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="7"/><counter type="LINE" missed="12" covered="2"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="870" covered="8036"/><counter type="BRANCH" missed="142" covered="1017"/><counter type="LINE" missed="169" covered="1763"/><counter type="COMPLEXITY" missed="150" covered="811"/><counter type="METHOD" missed="31" covered="349"/><counter type="CLASS" missed="0" covered="22"/></package><package name="org/apache/commons/io/filefilter"><class name="org/apache/commons/io/filefilter/AbstractFileFilter" sourcefilename="AbstractFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/PrefixFileFilter" sourcefilename="PrefixFileFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="71"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="104"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="121"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V" line="134"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="150"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="168"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="183"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="191"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/ConditionalFileFilter" sourcefilename="ConditionalFileFilter.java"/><class name="org/apache/commons/io/filefilter/HiddenFileFilter" sourcefilename="HiddenFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/DelegateFileFilter" sourcefilename="DelegateFileFilter.java"><method name="&lt;init&gt;" desc="(Ljava/io/FilenameFilter;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/FileFilter;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="74"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="90"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="78"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/WildcardFileFilter" sourcefilename="WildcardFileFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V" line="134"><counter type="INSTRUCTION" missed="1" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="152"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="168"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="184"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="196"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/TrueFileFilter" sourcefilename="TrueFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="57"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/RegexFileFilter" sourcefilename="RegexFileFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="89"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/regex/Pattern;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="119"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/NotFileFilter" sourcefilename="NotFileFilter.java"><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/SizeFileFilter" sourcefilename="SizeFileFilter.java"><method name="&lt;init&gt;" desc="(J)V" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JZ)V" line="70"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="92"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="103"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/SuffixFileFilter" sourcefilename="SuffixFileFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="72"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="105"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="122"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V" line="135"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="151"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="169"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="184"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="191"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/AndFileFilter" sourcefilename="AndFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFileFilters" desc="()Ljava/util/List;" line="95"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Z" line="102"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFileFilters" desc="(Ljava/util/List;)V" line="109"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="118"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="134"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="2" covered="50"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="167"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="3" covered="44"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/MagicNumberFileFilter" sourcefilename="MagicNumberFileFilter.java"><method name="&lt;init&gt;" desc="([B)V" line="112"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="137"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;J)V" line="160"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([BJ)V" line="205"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="239"><counter type="INSTRUCTION" missed="1" covered="49"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="268"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="170"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="1" covered="43"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/WildcardFilter" sourcefilename="WildcardFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="109"><counter type="INSTRUCTION" missed="2" covered="34"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="130"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="122"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/IOFileFilter" sourcefilename="IOFileFilter.java"/><class name="org/apache/commons/io/filefilter/FileFileFilter" sourcefilename="FileFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/AgeFileFilter" sourcefilename="AgeFileFilter.java"><method name="&lt;init&gt;" desc="(J)V" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JZ)V" line="76"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Date;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Date;Z)V" line="100"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/io/File;Z)V" line="125"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="143"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="154"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/DirectoryFileFilter" sourcefilename="DirectoryFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/FalseFileFilter" sourcefilename="FalseFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="58"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/CanWriteFileFilter" sourcefilename="CanWriteFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/FileFilterUtils" sourcefilename="FileFilterUtils.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;" line="77"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)[Ljava/io/File;" line="122"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterList" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;" line="152"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterList" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List;" line="181"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterSet" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set;" line="212"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterSet" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/Set;" line="243"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;" line="270"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prefixFileFilter" desc="(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="294"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prefixFileFilter" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="307"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="suffixFileFilter" desc="(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="318"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="suffixFileFilter" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="331"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nameFileFilter" desc="(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="342"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nameFileFilter" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="355"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="directoryFileFilter" desc="()Lorg/apache/commons/io/filefilter/IOFileFilter;" line="365"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileFileFilter" desc="()Lorg/apache/commons/io/filefilter/IOFileFilter;" line="375"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="andFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="391"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="406"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="and" desc="([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="421"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="436"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toList" desc="([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;" line="449"><counter type="INSTRUCTION" missed="5" covered="42"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="470"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trueFileFilter" desc="()Lorg/apache/commons/io/filefilter/IOFileFilter;" line="481"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="falseFileFilter" desc="()Lorg/apache/commons/io/filefilter/IOFileFilter;" line="491"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asFileFilter" desc="(Ljava/io/FileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="504"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asFileFilter" desc="(Ljava/io/FilenameFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="516"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ageFileFilter" desc="(J)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="530"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ageFileFilter" desc="(JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="543"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ageFileFilter" desc="(Ljava/util/Date;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="556"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ageFileFilter" desc="(Ljava/util/Date;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="569"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ageFileFilter" desc="(Ljava/io/File;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="583"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ageFileFilter" desc="(Ljava/io/File;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="597"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeFileFilter" desc="(J)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="610"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeFileFilter" desc="(JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="623"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeRangeFileFilter" desc="(JJ)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="637"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="magicNumberFileFilter" desc="(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="658"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="magicNumberFileFilter" desc="(Ljava/lang/String;J)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="679"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="magicNumberFileFilter" desc="([B)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="698"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="magicNumberFileFilter" desc="([BJ)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="719"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeCVSAware" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="741"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeSVNAware" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="758"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeDirectoryOnly" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="775"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeFileOnly" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;" line="790"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="724"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="415"/><counter type="BRANCH" missed="1" covered="33"/><counter type="LINE" missed="3" covered="84"/><counter type="COMPLEXITY" missed="3" covered="58"/><counter type="METHOD" missed="2" covered="42"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/OrFileFilter" sourcefilename="OrFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFileFilters" desc="()Ljava/util/List;" line="94"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFileFilter" desc="(Lorg/apache/commons/io/filefilter/IOFileFilter;)Z" line="101"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFileFilters" desc="(Ljava/util/List;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="117"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="130"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="2" covered="50"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="164"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/CanReadFileFilter" sourcefilename="CanReadFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/EmptyFileFilter" sourcefilename="EmptyFileFilter.java"><method name="&lt;init&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="77"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/filefilter/NameFileFilter" sourcefilename="NameFileFilter.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V" line="127"><counter type="INSTRUCTION" missed="1" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;)Z" line="144"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="162"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="177"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="196"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="EmptyFileFilter.java"><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="1" cb="3"/><line nr="81" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileFileFilter.java"><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PrefixFileFilter.java"><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="2" ci="5" mb="1" cb="1"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="2"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="2" ci="5" mb="1" cb="1"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="2" ci="5" mb="1" cb="1"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="17" mb="0" cb="2"/><line nr="152" mi="0" ci="6" mb="0" cb="2"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="17" mb="0" cb="2"/><line nr="169" mi="0" ci="6" mb="0" cb="2"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="1" cb="1"/><line nr="187" mi="0" ci="9" mb="0" cb="2"/><line nr="188" mi="0" ci="2" mb="0" cb="2"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="191"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SizeFileFilter.java"><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="2"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="2"/><line nr="93" mi="0" ci="11" mb="0" cb="4"/><line nr="103" mi="0" ci="7" mb="0" cb="2"/><line nr="104" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WildcardFilter.java"><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="2"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="2"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="2"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="9" mb="1" cb="3"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="17" mb="0" cb="2"/><line nr="114" mi="0" ci="4" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="1" cb="1"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="17" mb="0" cb="2"/><line nr="135" mi="0" ci="5" mb="0" cb="2"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="122"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OrFileFilter.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="2"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="1" cb="3"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="2"/><line nr="118" mi="0" ci="4" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="11" mb="0" cb="2"/><line nr="131" mi="0" ci="5" mb="0" cb="2"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="1" cb="1"/><line nr="149" mi="0" ci="9" mb="0" cb="2"/><line nr="150" mi="0" ci="2" mb="0" cb="2"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="2" ci="7" mb="1" cb="1"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="164"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CanWriteFileFilter.java"><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AgeFileFilter.java"><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="11" mb="0" cb="4"/><line nr="154" mi="0" ci="7" mb="0" cb="2"/><line nr="155" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DelegateFileFilter.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="1" cb="1"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="11" mb="0" cb="2"/><line nr="105" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="78"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MagicNumberFileFilter.java"><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="2"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="2"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="2"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="2"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="2"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="2"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="8" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="2" cb="4"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="2"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="0"/><line nr="250" mi="1" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="8" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="170"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="1" covered="43"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TrueFileFilter.java"><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractFileFilter.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NotFileFilter.java"><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="2"/><line nr="67" mi="0" ci="10" mb="0" cb="2"/><line nr="77" mi="0" ci="16" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileFilterUtils.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="2"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="16" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="2"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="8" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="2"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="2"/><line nr="274" mi="0" ci="10" mb="0" cb="2"/><line nr="275" mi="0" ci="2" mb="0" cb="2"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="2"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="6" mb="0" cb="0"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="6" mb="0" cb="0"/><line nr="342" mi="0" ci="5" mb="0" cb="0"/><line nr="355" mi="0" ci="6" mb="0" cb="0"/><line nr="365" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="391" mi="6" ci="0" mb="0" cb="0"/><line nr="406" mi="6" ci="0" mb="0" cb="0"/><line nr="421" mi="0" ci="6" mb="0" cb="0"/><line nr="436" mi="0" ci="6" mb="0" cb="0"/><line nr="449" mi="0" ci="2" mb="1" cb="1"/><line nr="450" mi="5" ci="0" mb="0" cb="0"/><line nr="452" mi="0" ci="6" mb="0" cb="0"/><line nr="453" mi="0" ci="8" mb="0" cb="2"/><line nr="454" mi="0" ci="4" mb="0" cb="2"/><line nr="455" mi="0" ci="14" mb="0" cb="0"/><line nr="457" mi="0" ci="6" mb="0" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="0" ci="5" mb="0" cb="0"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="491" mi="0" ci="2" mb="0" cb="0"/><line nr="504" mi="0" ci="5" mb="0" cb="0"/><line nr="516" mi="0" ci="5" mb="0" cb="0"/><line nr="530" mi="0" ci="5" mb="0" cb="0"/><line nr="543" mi="0" ci="6" mb="0" cb="0"/><line nr="556" mi="0" ci="5" mb="0" cb="0"/><line nr="569" mi="0" ci="6" mb="0" cb="0"/><line nr="583" mi="0" ci="5" mb="0" cb="0"/><line nr="597" mi="0" ci="6" mb="0" cb="0"/><line nr="610" mi="0" ci="5" mb="0" cb="0"/><line nr="623" mi="0" ci="6" mb="0" cb="0"/><line nr="637" mi="0" ci="6" mb="0" cb="0"/><line nr="638" mi="0" ci="8" mb="0" cb="0"/><line nr="639" mi="0" ci="6" mb="0" cb="0"/><line nr="658" mi="0" ci="5" mb="0" cb="0"/><line nr="679" mi="0" ci="6" mb="0" cb="0"/><line nr="698" mi="0" ci="5" mb="0" cb="0"/><line nr="719" mi="0" ci="6" mb="0" cb="0"/><line nr="724" mi="0" ci="6" mb="0" cb="0"/><line nr="725" mi="0" ci="8" mb="0" cb="0"/><line nr="728" mi="0" ci="7" mb="0" cb="0"/><line nr="729" mi="0" ci="8" mb="0" cb="0"/><line nr="741" mi="0" ci="2" mb="0" cb="2"/><line nr="742" mi="0" ci="2" mb="0" cb="0"/><line nr="744" mi="0" ci="12" mb="0" cb="0"/><line nr="758" mi="0" ci="2" mb="0" cb="2"/><line nr="759" mi="0" ci="2" mb="0" cb="0"/><line nr="761" mi="0" ci="12" mb="0" cb="0"/><line nr="775" mi="0" ci="2" mb="0" cb="2"/><line nr="776" mi="0" ci="2" mb="0" cb="0"/><line nr="778" mi="0" ci="6" mb="0" cb="0"/><line nr="790" mi="0" ci="2" mb="0" cb="2"/><line nr="791" mi="0" ci="2" mb="0" cb="0"/><line nr="793" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="415"/><counter type="BRANCH" missed="1" covered="33"/><counter type="LINE" missed="3" covered="84"/><counter type="COMPLEXITY" missed="3" covered="58"/><counter type="METHOD" missed="2" covered="42"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HiddenFileFilter.java"><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DirectoryFileFilter.java"><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RegexFileFilter.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="2"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="2" cb="2"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="2"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="2"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CanReadFileFilter.java"><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IOFileFilter.java"/><sourcefile name="WildcardFileFilter.java"><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="2"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="2"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="2"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="2"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="1" ci="6" mb="1" cb="1"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="17" mb="0" cb="2"/><line nr="153" mi="0" ci="6" mb="0" cb="2"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="17" mb="0" cb="2"/><line nr="170" mi="0" ci="6" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="1" cb="1"/><line nr="188" mi="0" ci="9" mb="0" cb="2"/><line nr="189" mi="0" ci="2" mb="0" cb="2"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="196"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AndFileFilter.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="2"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="4"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="11" mb="0" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="2"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="2"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="11" mb="0" cb="2"/><line nr="138" mi="0" ci="5" mb="0" cb="2"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="1" cb="1"/><line nr="156" mi="0" ci="9" mb="0" cb="2"/><line nr="157" mi="0" ci="2" mb="0" cb="2"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="2" ci="7" mb="1" cb="1"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="167"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="3" covered="44"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NameFileFilter.java"><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="2"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="2"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="2"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="2"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="132" mi="1" ci="6" mb="1" cb="1"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="17" mb="0" cb="2"/><line nr="146" mi="0" ci="6" mb="0" cb="2"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="17" mb="0" cb="2"/><line nr="163" mi="0" ci="6" mb="0" cb="2"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="1" cb="1"/><line nr="181" mi="0" ci="9" mb="0" cb="2"/><line nr="182" mi="0" ci="2" mb="0" cb="2"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="196"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SuffixFileFilter.java"><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="2"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="2" ci="5" mb="1" cb="1"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="2" ci="5" mb="1" cb="1"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="2" ci="5" mb="1" cb="1"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="17" mb="0" cb="2"/><line nr="153" mi="0" ci="6" mb="0" cb="2"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="17" mb="0" cb="2"/><line nr="170" mi="0" ci="6" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="1" cb="1"/><line nr="188" mi="0" ci="9" mb="0" cb="2"/><line nr="189" mi="0" ci="2" mb="0" cb="2"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="191"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FalseFileFilter.java"><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConditionalFileFilter.java"/><counter type="INSTRUCTION" missed="54" covered="2319"/><counter type="BRANCH" missed="26" covered="252"/><counter type="LINE" missed="10" covered="546"/><counter type="COMPLEXITY" missed="29" covered="277"/><counter type="METHOD" missed="3" covered="164"/><counter type="CLASS" missed="0" covered="23"/></package><package name="org/apache/commons/io/comparator"><class name="org/apache/commons/io/comparator/NameFileComparator" sourcefilename="NameFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/IOCase;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="102"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/comparator/CompositeFileComparator" sourcefilename="CompositeFileComparator.java"><method name="&lt;init&gt;" desc="([Ljava/util/Comparator;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Iterable;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="92"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/comparator/DirectoryFileComparator" sourcefilename="DirectoryFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="63"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="(Ljava/io/File;)I" line="73"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/comparator/DefaultFileComparator" sourcefilename="DefaultFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/comparator/SizeFileComparator" sourcefilename="SizeFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z)V" line="93"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="109"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="105"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/comparator/LastModifiedFileComparator" sourcefilename="LastModifiedFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="68"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/comparator/ReverseComparator" sourcefilename="ReverseComparator.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="39"><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/comparator/PathFileComparator" sourcefilename="PathFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/IOCase;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="103"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/comparator/AbstractFileComparator" sourcefilename="AbstractFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="([Ljava/io/File;)[Ljava/io/File;" line="44"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="(Ljava/util/List;)Ljava/util/List;" line="61"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/apache/commons/io/comparator/ExtensionFileComparator" sourcefilename="ExtensionFileComparator.java"><method name="&lt;init&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/apache/commons/io/IOCase;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/io/File;Ljava/io/File;)I" line="107"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractFileComparator.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="2"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="2"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NameFileComparator.java"><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="2"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DirectoryFileComparator.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultFileComparator.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CompositeFileComparator.java"><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="2"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="2"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="17" mb="0" cb="2"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="2"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="0" cb="2"/><line nr="113" mi="0" ci="2" mb="0" cb="2"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExtensionFileComparator.java"><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="2"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SizeFileComparator.java"><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="2"/><line nr="111" mi="0" ci="12" mb="1" cb="3"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="12" mb="1" cb="3"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="2"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="2"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="105"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReverseComparator.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="1" cb="1"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="16" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PathFileComparator.java"><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="2"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LastModifiedFileComparator.java"><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="2"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="5" covered="584"/><counter type="BRANCH" missed="3" covered="45"/><counter type="LINE" missed="1" covered="134"/><counter type="COMPLEXITY" missed="3" covered="63"/><counter type="METHOD" missed="0" covered="42"/><counter type="CLASS" missed="0" covered="10"/></package><counter type="INSTRUCTION" missed="2227" covered="17241"/><counter type="BRANCH" missed="295" covered="1959"/><counter type="LINE" missed="552" covered="4018"/><counter type="COMPLEXITY" missed="397" covered="1805"/><counter type="METHOD" missed="144" covered="929"/><counter type="CLASS" missed="1" covered="102"/></report>